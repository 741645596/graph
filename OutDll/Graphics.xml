<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Graphics</name>
    </assembly>
    <members>
        <member name="F:RayGraphics.Tree.AreaTile`1.s_dynblockArray">
            <summary>
            挡格数组，bit 存储一个挡格数据
            </summary>
        </member>
        <member name="F:RayGraphics.Tree.AreaTile`1.s_Xnum">
            <summary>
            瓦片X的num
            </summary>
        </member>
        <member name="F:RayGraphics.Tree.AreaTile`1.s_Ynum">
            <summary>
            瓦片Z的num
            </summary>
        </member>
        <member name="F:RayGraphics.Tree.AreaTile`1.s_tileSize">
            <summary>
            瓦片X的num
            </summary>
        </member>
        <member name="F:RayGraphics.Tree.AreaTile`1.s_startPos">
            <summary>
            起始位置
            </summary>
        </member>
        <member name="M:RayGraphics.Tree.AreaTile`1.Init(RayGraphics.Math.Float2,System.Single,System.Int32,System.Int32)">
            <summary>
            格子数据初始化
            </summary>
        </member>
        <member name="T:RayGraphics.Tree.BspTree">
            <summary>
            Binary space partitioning,BSP bsp tree
            </summary>
        </member>
        <member name="T:RayGraphics.Tree.Bvh">
            <summary>
            bounding volume hierarchy 层次包围盒
            </summary>
        </member>
        <member name="F:RayGraphics.Tree.KdTree.s_LimitCount">
            <summary>
            限定分割条件
            </summary>
        </member>
        <member name="M:RayGraphics.Tree.KdTree.BuildTree(RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Collections.Generic.List{RayGraphics.Tree.TreeData})">
            <summary>
            构建KD树
            </summary>
        </member>
        <member name="M:RayGraphics.Tree.KdTree.GetData(System.Int32)">
            <summary>
            获取数据
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Tree.KdTree.CheckNeedCull(System.Int32)">
            <summary>
            判断是否需要分割。
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Tree.KdTreeNode.left">
            <summary>
            左子树节点索引
            </summary>
        </member>
        <member name="F:RayGraphics.Tree.KdTreeNode.right">
            <summary>
            右子树索引
            </summary>
        </member>
        <member name="F:RayGraphics.Tree.KdTreeNode.CullingValue">
            <summary>
            子树的分割值
            </summary>
        </member>
        <member name="F:RayGraphics.Tree.KdTreeNode.isXCulling">
            <summary>
            子树分割轴
            </summary>
        </member>
        <member name="M:RayGraphics.Tree.KdTreeNode.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:RayGraphics.Tree.KdTreeNode.#ctor(RayGraphics.Tree.KdTree,RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Boolean,System.Collections.Generic.List{System.Int32})">
            <summary>
            构造
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <param name="listIndex"></param>
        </member>
        <member name="M:RayGraphics.Tree.KdTreeNode.BuildTreeRecursive">
            <summary>
            递归构建Agent 树
            </summary>
            <param name="begin">agent 开始索引，包含begin</param>
            <param name="end">agent 结束索引，不包含end</param>
            <param name="node"></param>
        </member>
        <member name="M:RayGraphics.Tree.KdTreeNode.CalcTotalCount">
            <summary>
            统计节点数据规模。
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Tree.KdTreeNode.CullProcess(System.Collections.Generic.List{System.Int32}@,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            处理分割
            </summary>
            <param name="listLeft"></param>
            <param name="listRight"></param>
        </member>
        <member name="F:RayGraphics.Tree.CullUnitHelp.s_ListLineUnit">
            <summary>
            从小到大排好序的了，x方向的分割了。
            </summary>
        </member>
        <member name="M:RayGraphics.Tree.CullUnitHelp.Clear">
            <summary>
            清理工作
            </summary>
        </member>
        <member name="M:RayGraphics.Tree.CullUnitHelp.Process(System.Int32,RayGraphics.Tree.TreeData,System.Boolean)">
            <summary>
            添加一个挡格。
            </summary>
            <param name="ContourPolyIndex"></param>
            <param name="ab"></param>
        </member>
        <member name="M:RayGraphics.Tree.CullUnitHelp.AddLineUnit(System.Collections.Generic.List{RayGraphics.Tree.CullUnit}@,RayGraphics.Tree.CullUnit)">
            <summary>
            查找到相交的区间
            </summary>
            <param name="listLineUnit"></param>
            <param name="unit"></param>
            <param name="retIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Tree.CullUnitHelp.GetBestCulling(System.Double@)">
            <summary>
            获取y 最佳分割线
            </summary>
            <param name="cullingValue"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Tree.CullUnitHelp.GetBestCulling(System.Collections.Generic.List{RayGraphics.Tree.CullUnit},System.Double@)">
            <summary>
            获取最佳分隔线
            </summary>
            <param name="listLineUnit"></param>
            <param name="cullingValue"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Tree.CullUnit.listIndex">
            <summary>
            包含的挡格多边形
            </summary>
        </member>
        <member name="F:RayGraphics.Tree.CullUnit.pointCounts">
            <summary>
            包含的挡格多变形总顶点数
            </summary>
        </member>
        <member name="M:RayGraphics.Tree.CullUnit.CheckIntersection(RayGraphics.Tree.CullUnit,RayGraphics.Tree.CullUnit)">
            <summary>
            判断是否相交
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Tree.CullUnit.Combine(RayGraphics.Tree.CullUnit)">
            <summary>
            合并两个
            </summary>
            <param name="v"></param>
        </member>
        <member name="T:RayGraphics.Tree.TreeData">
            <summary>
            定义树的相关数据
            </summary>
        </member>
        <member name="T:RayGraphics.Bounding.AABB">
            <summary>
            AABB包围盒(Axis-aligned bounding box)
            </summary>
        </member>
        <member name="T:RayGraphics.Bounding.OBB">
            <summary>
            OBB方向包围盒(Oriented bounding box)
            </summary>
        </member>
        <member name="M:RayGraphics.Bounding.OBB.CalcCovarianceMatrix(RayGraphics.Math.Float2[])">
            <summary>
            计算协方差举证
            https://zhuanlan.zhihu.com/p/37609917
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Bounding.OBB.jacobiSolver(RayGraphics.Math.Matrix2x2,System.Double[],RayGraphics.Math.Double2[])">
            <summary>
            求出特征向量，也就是轴
            </summary>
            <param name="matrix"></param>
            <param name="eValue"></param>
            <param name="eVectors"></param>
        </member>
        <member name="T:RayGraphics.Bounding.Sphere">
            <summary>
            球形包围盒
            </summary>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.CoordinateSystem2D.originPoint">
            <summary>
            坐标原点
            </summary>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.CoordinateSystem2D.xAixs">
            <summary>
            x轴
            </summary>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.CoordinateSystem2D.yAixs">
            <summary>
            y轴
            </summary>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.CoordinateSystem3D.originPoint">
            <summary>
            坐标原点
            </summary>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.CoordinateSystem3D.xAixs">
            <summary>
            x轴
            </summary>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.CoordinateSystem3D.yAixs">
            <summary>
            x轴
            </summary>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.CoordinateSystem3D.zAixs">
            <summary>
            x轴
            </summary>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.Polar2D.radius">
            <summary>
            长度
            </summary>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.Polar2D.angle">
            <summary>
            角度
            </summary>
        </member>
        <member name="P:RayGraphics.CoordinateSystem.Polar2D.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:RayGraphics.CoordinateSystem.Polar2D.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="M:RayGraphics.CoordinateSystem.Polar2D.Exp(System.Double)">
            <summary>
            指数函数
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.CoordinateSystem.Polar2D.op_Multiply(RayGraphics.CoordinateSystem.Polar2D,RayGraphics.CoordinateSystem.Polar2D)">
            <summary>
            * 运算
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.ViewCoordinateSystem.near">
            <summary>
            近截面
            </summary>
        </member>
        <member name="F:RayGraphics.CoordinateSystem.ViewCoordinateSystem.far">
            <summary>
            远界面
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.AABB2D.leftBottom">
            <summary>
            左下
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.AABB2D.rightUp">
            <summary>
            右上
            </summary>
        </member>
        <member name="P:RayGraphics.Geometric.AABB2D.LeftUp">
            <summary>
            左⬆️
            </summary>
        </member>
        <member name="P:RayGraphics.Geometric.AABB2D.RightBottom">
            <summary>
            右⬇️
            </summary>
        </member>
        <member name="P:RayGraphics.Geometric.AABB2D.Center">
            <summary>
            Center
            </summary>
        </member>
        <member name="P:RayGraphics.Geometric.AABB2D.Center2">
            <summary>
            2* Center
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.SetAABB(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            设置aabb
            </summary>
            <param name="lb"></param>
            <param name="ru"></param>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.CheckIn(RayGraphics.Math.Double2)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.CheckLineRelation(RayGraphics.Geometric.Line2D)">
            <summary>
            与直线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.CheckLineRelation(RayGraphics.Geometric.Rays2D)">
            <summary>
            射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.CheckLineRelation(RayGraphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.RayboundingNearestPath(RayGraphics.Geometric.LineSegment2D,System.Double,RayGraphics.Geometric.RayboundingInfo@)">
            <summary>
            最短射线包围盒路径
            </summary>
            <param name="line">线段</param>
            <param name="offset">偏移值</param>
            <param name="rbi">包围盒信息</param>
            <returns>true，表示线段与aabb有相交，并返回最短包围路径</returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetBornPoint(RayGraphics.Geometric.LineSegment2D,System.Double,RayGraphics.Math.Double2@)">
            <summary>
            获取挡格附近出生点
            </summary>
            <param name="line"></param>
            <param name="offset"></param>
            <param name="bornPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectStart"></param>
            <param name="intersectEnd"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetNearIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@)">
            <summary>
            获取近的相交点
            </summary>
            <param name="line"></param>
            <param name="intersectStart"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.CheckIntersect(RayGraphics.Geometric.Triangle2D)">
            <summary>
            与矩形的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.CheckIntersect(RayGraphics.Geometric.Rect2D)">
            <summary>
            与矩形的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.CheckIntersect(RayGraphics.Geometric.Circle2D)">
            <summary>
            与圆的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.CheckIntersect(RayGraphics.Geometric.Polygon2D)">
            <summary>
            与多边形的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.CheckIntersect(RayGraphics.Geometric.AABB2D,RayGraphics.Geometric.AABB2D)">
            <summary>
            判断2个对象是否相交
            </summary>
            <param name="ab1"></param>
            <param name="ab2"></param>
            <returns>暂处理不多边形的关系</returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetEdge(System.Int32)">
            <summary>
            获取边
            </summary>
            <param name="edgeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetSimpleEdge(System.Int32)">
            <summary>
            获取边
            </summary>
            <param name="edgeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetPoint(System.Int32)">
            <summary>
            获取顶点
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetPointPlus(System.Int32)">
            <summary>
            获取顶点
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetNormal(System.Int32)">
            <summary>
            获取法线
            </summary>
            <param name="edgeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetEdgeNum">
            <summary>
            获取边数
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetPoints">
            <summary>
            获取顶点数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetPointsPlus">
            <summary>
            获取顶点数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.CheckCrossPoint(System.Int32)">
            <summary>
            判断某个顶点是否可通行
            </summary>
            <param name="indexPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.AABB2D.GetCrossPointData">
            <summary>
            获取顶点可通过数据
            </summary>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Geometric.Circle2D.circleCenter">
            <summary>
            中心
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Circle2D.radius">
            <summary>
            半径
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.CreateCircumCircle(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            创建外接圆
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.CreateInscribedCircle(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            创建内接圆
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.GetNearIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@)">
            <summary>
            获取近的相交点
            </summary>
            <param name="line"></param>
            <param name="intersectStart"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.RayboundingNearestPath(RayGraphics.Geometric.LineSegment2D,System.Double,RayGraphics.Geometric.RayboundingInfo@)">
            <summary>
            最短射线包围盒路径
            </summary>
            <param name="line">线段</param>
            <param name="offset">偏移值</param>
            <param name="rbi">包围盒信息</param>
            <returns>true，表示线段与aabb有相交，并返回最短包围路径</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.SignedAngleInCircle(RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Double)">
            <summary>
            圆弧上的2个向量夹角
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.CheckIn(RayGraphics.Math.Double2)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.CheckLineRelation(RayGraphics.Geometric.Line2D)">
            <summary>
            与直线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.CheckLineRelation(RayGraphics.Geometric.Rays2D)">
            <summary>
            直线与射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.CheckLineRelation(RayGraphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.GetBornPoint(RayGraphics.Geometric.LineSegment2D,System.Double,RayGraphics.Math.Double2@)">
            <summary>
            获取挡格附近出生点
            </summary>
            <param name="line"></param>
            <param name="offset"></param>
            <param name="bornPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.CheckIntersect(RayGraphics.Geometric.Rect2D)">
            <summary>
            与矩形的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.CheckIntersect(RayGraphics.Geometric.Circle2D)">
            <summary>
            与圆的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.CheckIntersect(RayGraphics.Geometric.Polygon2D)">
            <summary>
            与多边形的关系
            </summary>
            <param name="ab"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Circle2D.GetTangent(RayGraphics.Math.Double2,RayGraphics.Math.Double2@,RayGraphics.Math.Double2@)">
            <summary>
            求外部点到圆的切线
            </summary>
            <param name="outPoint">在圆上/圆内不计算切线</param>
            <param name="leftTangent">逆时针切线</param>
            <param name="rightTangent">顺时针切线</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygon2D.GenerateConcavePolygon(System.Collections.Generic.List{RayGraphics.Math.Double2[]})">
            <summary>
            生成凹多边形
            </summary>
            <param name="listpolygon"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygon2D.CombinePolygon(RayGraphics.Math.Double2[],RayGraphics.Math.Double2[],System.Boolean@)">
            <summary>
            求多边形的并。
            </summary>
            <param name="polygon1"></param>
            <param name="polygon2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygon2D.ClearPolyIntersectArray(System.Collections.Generic.List{RayGraphics.Math.Double3}[]@,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@)">
            <summary>
            清理动作
            </summary>
            <param name="Poly1IntersectArray"></param>
            <param name="Poly2IntersectArray"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygon2D.GetNearPointInEdge(RayGraphics.Geometric.Point2D,System.Boolean,RayGraphics.Math.Double2,System.Collections.Generic.List{RayGraphics.Math.Double3},RayGraphics.Math.Double3@)">
            <summary>
            多边形决策。
            </summary>
            <param name="ls2d"></param>
            <param name="dir"></param>
            <param name="targetPoint"></param>
            <param name="middlePoint"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygon2D.SetInitData(RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D@,RayGraphics.Math.Double2@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="poly1"></param>
            <param name="poly2"></param>
            <param name="poly"></param>
            <param name="curedge"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygon2D.AddPoint(System.Collections.Generic.List{RayGraphics.Math.Double2}@,RayGraphics.Math.Double2)">
            <summary>
            加入顶点
            </summary>
            <param name="listPoint"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygon2D.ExChangePoly(RayGraphics.Geometric.Polygon2D@,RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@,System.Collections.Generic.List{RayGraphics.Math.Double3}[],System.Collections.Generic.List{RayGraphics.Math.Double3}[])">
            <summary>
            交换数据
            </summary>
            <param name="poly"></param>
            <param name="poly1"></param>
            <param name="poly2"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygon2D.GetAllEdgeInterSectPoint(RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@)">
            <summary>
            获取多边形所有边的相交点
            </summary>
            <param name="poly1"></param>
            <param name="poly2"></param>
            <param name="Poly1IntersectArray"></param>
            <param name="Poly2IntersectArray"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygon2D.GetAllIntersectPoint(RayGraphics.Math.Double2,System.Int32,System.Collections.Generic.List{RayGraphics.Math.Double3}[],System.Collections.Generic.List{RayGraphics.Math.Double3}@)">
            <summary>
            获取线段与多边形的所有交点，并按从近到远排序。，float3 z记录与多边形相交的边。
            </summary>
            <param name="lsStartPoint">线段起点</param>
            <param name="lsindex">线段索引</param>
            <param name="PolyIntersectArray">多边形相交数据</param>
            <param name="paths"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygonPlus2D.GenerateConcavePolygon(System.Collections.Generic.List{RayGraphics.Math.Double2Bool[]})">
            <summary>
            生成凹多边形
            </summary>
            <param name="listpolygon"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygonPlus2D.CombinePolygon(RayGraphics.Math.Double2Bool[],RayGraphics.Math.Double2Bool[],System.Boolean@)">
            <summary>
            求多边形的并。
            </summary>
            <param name="polygon1"></param>
            <param name="polygon2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygonPlus2D.ClearPolyIntersectArray(System.Collections.Generic.List{RayGraphics.Math.Double3}[]@,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@)">
            <summary>
            清理动作
            </summary>
            <param name="Poly1IntersectArray"></param>
            <param name="Poly2IntersectArray"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygonPlus2D.GetNearPointInEdge(RayGraphics.Geometric.Point2D,System.Boolean,RayGraphics.Math.Double2Bool,System.Collections.Generic.List{RayGraphics.Math.Double3},RayGraphics.Math.Double3@)">
            <summary>
            多边形决策。
            </summary>
            <param name="ls2d"></param>
            <param name="dir"></param>
            <param name="targetPoint"></param>
            <param name="middlePoint"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygonPlus2D.SetInitData(RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D@,RayGraphics.Math.Double2Bool@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="poly1"></param>
            <param name="poly2"></param>
            <param name="poly"></param>
            <param name="curedge"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygonPlus2D.AddPoint(System.Collections.Generic.List{RayGraphics.Math.Double2Bool}@,RayGraphics.Math.Double2Bool)">
            <summary>
            加入顶点
            </summary>
            <param name="listPoint"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygonPlus2D.ExChangePoly(RayGraphics.Geometric.Polygon2D@,RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@,System.Collections.Generic.List{RayGraphics.Math.Double3}[],System.Collections.Generic.List{RayGraphics.Math.Double3}[])">
            <summary>
            交换数据
            </summary>
            <param name="poly"></param>
            <param name="poly1"></param>
            <param name="poly2"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygonPlus2D.GetAllEdgeInterSectPoint(RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@)">
            <summary>
            获取多边形所有边的相交点
            </summary>
            <param name="poly1"></param>
            <param name="poly2"></param>
            <param name="Poly1IntersectArray"></param>
            <param name="Poly2IntersectArray"></param>
        </member>
        <member name="M:RayGraphics.Geometric.ConcavePolygonPlus2D.GetAllIntersectPoint(RayGraphics.Math.Double2,System.Int32,System.Collections.Generic.List{RayGraphics.Math.Double3}[],System.Collections.Generic.List{RayGraphics.Math.Double3}@)">
            <summary>
            获取线段与多边形的所有交点，并按从近到远排序。，float3 z记录与多边形相交的边。
            </summary>
            <param name="lsStartPoint">线段起点</param>
            <param name="lsindex">线段索引</param>
            <param name="PolyIntersectArray">多边形相交数据</param>
            <param name="paths"></param>
        </member>
        <member name="T:RayGraphics.Geometric.ConvexPolygon2D">
            <summary>
            生成polygon 
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.ConvexPolygon2D.GenerateConvexPolygonIndex(RayGraphics.Math.Double2[])">
            <summary>
            获取凸多边形的索引。
            </summary>
            <param name="listpt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.ConvexPolygon2D.GenerateConvexPolygon(RayGraphics.Math.Double2[])">
            <summary>
            获取凸包
            </summary>
            <param name="listpt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.ConvexPolygon2D.SearchOutPoint(System.Int32,RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Collections.Generic.List{RayGraphics.Math.Double2})">
            <summary>
            获取最边缘一圈的顶点。
            </summary>
            <param name="dir"></param>
            <param name="s"></param>
            <param name="e"></param>
            <param name="listOutEdgePoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.CheckIn(RayGraphics.Math.Double2)">
            <summary>
            判断点是否在几何元素上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.CalcDistance(RayGraphics.Math.Double2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.ProjectPoint(RayGraphics.Math.Double2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.AixsVector(RayGraphics.Math.Double2)">
            <summary>
            点到几何元素轴向量（垂直），交点-》pt
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.CheckLineRelation(RayGraphics.Geometric.Line2D)">
            <summary>
            与直线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.CheckLineRelation(RayGraphics.Geometric.Rays2D)">
            <summary>
            与射线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.CheckLineRelation(RayGraphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.GetIntersectPoint(RayGraphics.Geometric.Line2D,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.GetIntersectPoint(RayGraphics.Geometric.Rays2D,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.GetIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo2DElement.GetMirrorPoint(RayGraphics.Math.Double2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.Line2D">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Line2D.startPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Line2D.normalizedDir">
            <summary>
            方向为单位向量
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.CheckIn(RayGraphics.Math.Double2)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.CalcDistance(RayGraphics.Math.Double2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.ProjectPoint(RayGraphics.Math.Double2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.AixsVector(RayGraphics.Math.Double2)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.CheckLineRelation(RayGraphics.Geometric.Line2D)">
            <summary>
            与直线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.CheckLineRelation(RayGraphics.Geometric.Rays2D)">
            <summary>
            直线与射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.CheckLineRelation(RayGraphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.GetIntersectPoint(RayGraphics.Geometric.Line2D,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.GetIntersectPoint(RayGraphics.Geometric.Rays2D,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.GetIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line2D.GetMirrorPoint(RayGraphics.Math.Double2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.LineSegment2D">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.LineSegment2D.startPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.LineSegment2D.endPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.LineSegment2D.normalizedDir">
            <summary>
            方向为单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Geometric.LineSegment2D.length">
            <summary>
            长度
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.#ctor(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            构建线段
            </summary>
            <param name="startPt"></param>
            <param name="endPt"></param>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.CheckIn(RayGraphics.Math.Double2)">
            <summary>
            判断点是否在线段上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.CalcDistance(RayGraphics.Math.Double2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.ProjectPoint(RayGraphics.Math.Double2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.CheckProjectInLine(RayGraphics.Math.Double2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.AixsVector(RayGraphics.Math.Double2)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.CheckLineRelation(RayGraphics.Geometric.Line2D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.CheckLineRelation(RayGraphics.Geometric.Rays2D)">
            <summary>
            射线与射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.CheckLineRelation(RayGraphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.GetIntersectPoint(RayGraphics.Geometric.Line2D,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.GetIntersectPoint(RayGraphics.Geometric.Rays2D,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.GetIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment2D.GetMirrorPoint(RayGraphics.Math.Double2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Geometric.OBB2D.startPoint">
            <summary>
            起点
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.OBB2D.aix1">
            <summary>
            轴1
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.OBB2D.aix2">
            <summary>
            轴2
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.OBB2D.size">
            <summary>
            obb的大小
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.SetObb(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            设置aabb
            </summary>
            <param name="lb"></param>
            <param name="ru"></param>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.Init(RayGraphics.Math.Double2[])">
            <summary>
            根据点阵创建obb
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.CalcCenter(RayGraphics.Math.Double2[],RayGraphics.Math.Double2@)">
            <summary>
            计算点阵的中心及修正后的点阵。
            </summary>
            <param name="points"></param>
            <param name="centerPos"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.CalcSize(RayGraphics.Math.Double2[],RayGraphics.Math.Double2,RayGraphics.Math.Matrix2x2)">
            <summary>
            
            </summary>
            <param name="offPoints"></param>
            <param name="centerPos"></param>
            <param name="featreVectorMatrix"></param>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.CheckIn(RayGraphics.Math.Float2)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.CalcDistance(RayGraphics.Math.Float2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.ProjectPoint(RayGraphics.Math.Float2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.AixsVector(RayGraphics.Math.Float2)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.CheckLineRelation(RayGraphics.Geometric.Line2D)">
            <summary>
            与直线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.CheckLineRelation(RayGraphics.Geometric.Rays2D)">
            <summary>
            直线与射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.CheckLineRelation(RayGraphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.GetMirrorPoint(RayGraphics.Math.Float2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.RayboundingNearestPath(RayGraphics.Geometric.LineSegment2D,System.Single,System.Collections.Generic.List{RayGraphics.Math.Float2}@)">
            <summary>
            最短射线包围盒路径
            </summary>
            <param name="line">线段</param>
            <param name="offset">偏移值</param>
            <param name="paths">返回路径</param>
            <returns>true，表示线段与aabb有相交，并返回最短包围路径</returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.GetBornPoint(RayGraphics.Geometric.LineSegment2D,System.Single,RayGraphics.Math.Float2@)">
            <summary>
            获取挡格附近出生点
            </summary>
            <param name="line"></param>
            <param name="offset"></param>
            <param name="bornPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.GetIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Float2@,RayGraphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectStart"></param>
            <param name="intersectEnd"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.OBB2D.GetPoints">
            <summary>
            求obb的点
            </summary>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.Point2D">
            <summary>
            顶点组
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Point2D.startPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Point2D.endPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Point2D.#ctor(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            构建线段
            </summary>
            <param name="startPt"></param>
            <param name="endPt"></param>
        </member>
        <member name="M:RayGraphics.Geometric.Point2D.CheckIn(RayGraphics.Math.Double2)">
            <summary>
            判断点是否在线段上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Geometric.Polygon2D.pointArr">
            <summary>
            顶点列表
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Polygon2D.normalAttr">
            <summary>
            法线列表。
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Polygon2D.listunCrossPoints">
            <summary>
            顶点可同行数组
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Polygon2D.distancArr">
            <summary>
            逆时针
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.Init(RayGraphics.Math.Double2[])">
            <summary>
            初始化数据
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.RayboundingNearestPath(RayGraphics.Geometric.LineSegment2D,System.Double,RayGraphics.Geometric.RayboundingInfo@)">
            <summary>
            最短射线包围盒路径
            </summary>
            <param name="line">线段</param>
            <param name="offset">偏移值</param>
            <param name="rbi">包围盒信息</param>
            <returns>true，表示线段与aabb有相交，并返回最短包围路径</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.CheckisSubChild(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            确定是否为其子集, 先简单实现。
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.RayboundingNearestPath(RayGraphics.Math.Double3,RayGraphics.Math.Double3,System.Double,System.Boolean,System.Collections.Generic.List{RayGraphics.Math.Double2}@)">
            <summary>
            中间经过的顶点，不包含2端的点。
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="offset"></param>
            <param name="isPathDir"></param>
            <param name="paths"></param>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetPathPoint(System.Int32,System.Int32,System.Boolean)">
            <summary>
            中间经过的顶点，不包含2端的点。
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <param name="offset"></param>
            <param name="isPathDir"></param>
            <param name="paths"></param>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetOutPoint(System.Int32,System.Double)">
            <summary>
            获取指定顶点的外部偏移点
            </summary>
            <param name="index"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.CheckPathDir(RayGraphics.Math.Double3,RayGraphics.Math.Double3,System.Boolean@)">
            <summary>
            确认方向（顺时针，逆时针方向）
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetCrossValue(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="index1"></param>
            <param name="index2"></param>
            <returns>0, 可以通。1. 升序不可通， 2 降序不可通, 3 都不可通</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetBornPoint(RayGraphics.Geometric.LineSegment2D,System.Double,RayGraphics.Math.Double2@)">
            <summary>
            获取挡格附近出生点
            </summary>
            <param name="line"></param>
            <param name="offset"></param>
            <param name="bornPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.CheckLineRelation(RayGraphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetPolygonType">
            <summary>
            获取多边形的类型，凹的还是凸的。
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.CalcRotateValue(System.Int32)">
            <summary>
            计算某个顶点叉乘。
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetAllIntersectPoint(RayGraphics.Geometric.LineSegment2D,System.Collections.Generic.List{RayGraphics.Math.Double3}@)">
            <summary>
            获取线段与多边形的所有交点，并按从近到远排序。，float3 z记录与多边形相交的边。
            </summary>
            <param name="line"></param>
            <param name="paths"></param>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetEdge(System.Int32)">
            <summary>
            获取边
            </summary>
            <param name="edgeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetSimpleEdge(System.Int32)">
            <summary>
            获取边
            </summary>
            <param name="edgeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetNormal(System.Int32)">
            <summary>
            获取法线
            </summary>
            <param name="edgeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetPoint(System.Int32)">
            <summary>
            获取顶点
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetPointPlus(System.Int32)">
            <summary>
            获取顶点
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetPointsPlus">
            <summary>
            获取顶点数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.CheckIntersect(RayGraphics.Geometric.Rect2D)">
            <summary>
            与矩形的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.CheckIntersect(RayGraphics.Geometric.Circle2D)">
            <summary>
            与圆的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.CheckIntersect(RayGraphics.Geometric.Polygon2D)">
            <summary>
            与多边形的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetEdgeNum">
            <summary>
            获取边数
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetPoints">
            <summary>
            获取顶点数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.CheckIn(RayGraphics.Math.Double2)">
            <summary>
            判断点多边形内。
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.CheckCrossPoint(System.Int32)">
            <summary>
            判断某个顶点是否可通行
            </summary>
            <param name="indexPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetCrossPointData">
            <summary>
            获取顶点可通过数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetNearIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@)">
            <summary>
            获取近的相交点
            </summary>
            <param name="line"></param>
            <param name="intersectStart"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetPointsInAreabyXaixs(System.Double,System.Double,RayGraphics.Math.Double2@,RayGraphics.Math.Double2@)">
            <summary>
            获取与x轴线与边界最接近的2个点
            </summary>
            <param name="xAixs"></param>
            <param name="nearStep"></param>
            <param name="pt1"></param>
            <param name="pt2"></param>
            <returns>false ：不相交 true；相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2D.GetPointsInAreabyYaixs(System.Double,System.Double,RayGraphics.Math.Double2@,RayGraphics.Math.Double2@)">
            <summary>
            获取与Y轴线与边界最接近的2个点
            </summary>
            <param name="YAixs"></param>
            <param name="nearStep"></param>
            <param name="pt1"></param>
            <param name="pt2"></param>
            <returns>false ：不相交 true；相交</returns>
        </member>
        <member name="T:RayGraphics.Geometric.Rays2D">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Rays2D.startPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Rays2D.normalizedDir">
            <summary>
            方向为单位向量
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.CheckIn(RayGraphics.Math.Double2)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.CalcDistance(RayGraphics.Math.Double2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.ProjectPoint(RayGraphics.Math.Double2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.AixsVector(RayGraphics.Math.Double2)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.CheckLineRelation(RayGraphics.Geometric.Line2D)">
            <summary>
            与射线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.CheckLineRelation(RayGraphics.Geometric.Rays2D)">
            <summary>
            射线与射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.CheckLineRelation(RayGraphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.GetIntersectPoint(RayGraphics.Geometric.Line2D,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.GetIntersectPoint(RayGraphics.Geometric.Rays2D,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.GetIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays2D.GetMirrorPoint(RayGraphics.Math.Double2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.Rect2D">
            <summary>
            矩形区域
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Rect2D.GetBornPoint(RayGraphics.Geometric.LineSegment2D,System.Double,RayGraphics.Math.Double2@)">
            <summary>
            获取挡格附近出生点
            </summary>
            <param name="line"></param>
            <param name="offset"></param>
            <param name="bornPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rect2D.RayboundingNearestPath(RayGraphics.Geometric.LineSegment2D,System.Double,RayGraphics.Geometric.RayboundingInfo@)">
            <summary>
            最短射线包围盒路径
            </summary>
            <param name="line">线段</param>
            <param name="offset">偏移值</param>
            <param name="rbi">包围盒信息</param>
            <returns>true，表示线段与aabb有相交，并返回最短包围路径</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rect2D.RayboundingNearestPath(RayGraphics.Math.Double3,RayGraphics.Math.Double3,System.Double,System.Collections.Generic.List{RayGraphics.Math.Double2}@)">
            <summary>
            
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="sl"></param>
        </member>
        <member name="M:RayGraphics.Geometric.Rect2D.CheckLineRelation(RayGraphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rect2D.GetIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@,RayGraphics.Math.Double2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectStart"></param>
            <param name="intersectEnd"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rect2D.GetNearIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@)">
            <summary>
            获取近的相交点
            </summary>
            <param name="line"></param>
            <param name="intersectStart"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rect2D.CheckIntersect(RayGraphics.Geometric.Triangle2D)">
            <summary>
            与矩形的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rect2D.CheckIntersect(RayGraphics.Geometric.Rect2D)">
            <summary>
            与矩形的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rect2D.CheckIntersect(RayGraphics.Geometric.Circle2D)">
            <summary>
            与圆的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rect2D.CheckIntersect(RayGraphics.Geometric.Polygon2D)">
            <summary>
            与多边形的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="F:RayGraphics.Geometric.Triangle2D.p1">
            <summary>
            顶点1
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Triangle2D.p2">
            <summary>
            顶点2
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Triangle2D.p3">
            <summary>
            顶点3
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.#ctor(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            顺时针顶点
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="p3"></param>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.GetEdgeNum">
            <summary>
            获取边数
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.GetPoints">
            <summary>
            获取顶点数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.GetPointsPlus">
            <summary>
            获取顶点数组
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.GetPoint(System.Int32)">
            <summary>
            获取顶点
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.GetPointPlus(System.Int32)">
            <summary>
            获取顶点
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.GetEdge(System.Int32)">
            <summary>
            获取边
            </summary>
            <param name="edgeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.GetSimpleEdge(System.Int32)">
            <summary>
            获取边
            </summary>
            <param name="edgeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.CheckIn(RayGraphics.Math.Double2)">
            <summary>
            判断点三角形内。
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.CheckIntersect(RayGraphics.Geometric.Rect2D)">
            <summary>
            与矩形的关系
            </summary>
            <param name="dbd1"></param>
            <returns>true 相交： false 不相交</returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle2D.GetNearIntersectPoint(RayGraphics.Geometric.LineSegment2D,RayGraphics.Math.Double2@)">
            <summary>
            获取近的相交点
            </summary>
            <param name="line"></param>
            <param name="intersectStart"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo3DElement.CheckIn(RayGraphics.Math.Double3)">
            <summary>
            判断点是否在几何元素上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo3DElement.CalcDistance(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo3DElement.ProjectPoint(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo3DElement.AixsVector(RayGraphics.Math.Double3)">
            <summary>
            点到几何元素轴向量（垂直），交点-》pt
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo3DElement.CheckLineRelation(RayGraphics.Geometric.Line3D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.iGeo3DElement.GetIntersectPoint(RayGraphics.Geometric.Line3D,RayGraphics.Math.Double3@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.Line3D">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Line3D._startPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Line3D._normalizedDir">
            <summary>
            方向为单位向量
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Line3D.CheckIn(RayGraphics.Math.Double3)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line3D.CalcDistance(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line3D.ProjectPoint(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line3D.AixsVector(RayGraphics.Math.Double3)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line3D.CheckLineRelation(RayGraphics.Geometric.Line3D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line3D.GetIntersectPoint(RayGraphics.Geometric.Line3D,RayGraphics.Math.Double3@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line3D.CheckInSamePlane(RayGraphics.Geometric.Line3D,RayGraphics.Geometric.Line3D)">
            <summary>
            判断是否在相同的平面
            </summary>
            <param name="line1"></param>
            <param name="line2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Line3D.GetVerticalAxis(RayGraphics.Geometric.Line3D,RayGraphics.Geometric.Line3D)">
            <summary>
            获取垂直轴
            </summary>
            <param name="line1"></param>
            <param name="line2"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.LineSegment3D">
            <summary>
            线段
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment3D.CheckIn(RayGraphics.Math.Double3)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment3D.CalcDistance(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment3D.CheckLineRelation(RayGraphics.Geometric.Line3D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.LineSegment3D.GetIntersectPoint(RayGraphics.Geometric.Line3D,RayGraphics.Math.Double3@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Geometric.Plane._pt">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Plane._normalizedNormal">
            <summary>
            法线
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Plane.CheckIn(RayGraphics.Math.Double3)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Plane.CalcDistance(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Plane.ProjectPoint(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Plane.AixsVector(RayGraphics.Math.Double3)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Plane.CheckLineRelation(RayGraphics.Geometric.Line3D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Plane.GetIntersectPoint(RayGraphics.Geometric.Line3D,RayGraphics.Math.Double3@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon3D.CheckIn(RayGraphics.Math.Double3)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon3D.CalcDistance(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon3D.ProjectPoint(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的投影
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.Rays3D">
            <summary>
            射线
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Rays3D.CheckIn(RayGraphics.Math.Double3)">
            <summary>
            判断点是否在射线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays3D.CalcDistance(RayGraphics.Math.Double3)">
            <summary>
            点导视线的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays3D.CheckLineRelation(RayGraphics.Geometric.Line3D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rays3D.GetIntersectPoint(RayGraphics.Geometric.Line3D,RayGraphics.Math.Double3@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Geometric.Rect3D._aixs1">
            <summary>
            轴1，带长度
            </summary>
        </member>
        <member name="F:RayGraphics.Geometric.Rect3D._aixs2">
            <summary>
            轴2，带长度
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Rect3D.CheckIn(RayGraphics.Math.Double3)">
            <summary>
            判断点是否在矩形内
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Rect3D.CalcDistance(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle3D.CheckIn(RayGraphics.Math.Double3)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle3D.CalcDistance(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.Triangle3D.ProjectPoint(RayGraphics.Math.Double3)">
            <summary>
            点导几何元素的投影
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.RayboundingInfo">
            <summary>
            挡格射线包围盒信息。
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:RayGraphics.Geometric.RayboundingInfo.isCounterclockwiseDir" -->
        <member name="M:RayGraphics.Geometric.RayboundingInfo.SetNear(RayGraphics.Geometric.LineSegment2D,System.Double,RayGraphics.Math.Double2)">
            <summary>
            设置近距离相交点
            </summary>
            <param name="line"></param>
            <param name="offset"></param>
            <param name="near"></param>
        </member>
        <member name="M:RayGraphics.Geometric.RayboundingInfo.CalcHelpData(RayGraphics.Geometric.LineSegment2D,System.Double,RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            计算其他辅助数据
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:RayGraphics.Geometric.RayboundingInfo.CaclCounterclockwiseDir(RayGraphics.Geometric.LineSegment2D,System.Collections.Generic.List{RayGraphics.Math.Double2})">
            <summary>
            计算时钟方向
            </summary>
            <param name="line"></param>
            <param name="paths"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.RayboundingInfo.ReviseNearFar(RayGraphics.Geometric.LineSegment2D)">
            <summary>
            修正near far 点
            </summary>
            <param name="line"></param>
            <param name="nearPoint"></param>
            <param name="farPoint"></param>
        </member>
        <member name="M:RayGraphics.Geometric.RayPathOptimization.OptimizationLine(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Boolean,System.Collections.Generic.List{RayGraphics.Math.Double2})">
            <summary>
            优化路线
            </summary>
            <param name="lineStart">线段起点</param>
            <param name="lineEnd">线段终点</param>
            <param name="near">与动态挡格相交 near点</param>
            <param name="far">与动态挡格相交 far点</param>
            <param name="listMidPoint">2个交点之间的路线</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.RayPathOptimization.SearchOutPoint(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Collections.Generic.List{RayGraphics.Math.Double2})">
            <summary>
            获取最边缘一圈的顶点。
            </summary>
            <param name="lineStart">起点</param>
            <param name="far">远处的交点</param>
            <param name="outdir">外包边</param>
            <param name="listOutEdgePoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.RayPathOptimization.CheckPointInCorns(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            判断指定的点，在夹角内。不包括在边上。
            </summary>
            <param name="target"></param>
            <param name="startPoint"></param>
            <param name="indir"></param>
            <param name="outdir"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.RayPathOptimization1">
            <summary>
            bake 版本
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.RayPathOptimization1.OptimizationLine(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Boolean,System.Collections.Generic.List{RayGraphics.Math.Double2})">
            <summary>
            优化路线
            </summary>
            <param name="lineStart">线段起点</param>
            <param name="lineEnd">线段终点</param>
            <param name="near">与动态挡格相交 near点</param>
            <param name="far">与动态挡格相交 far点</param>
            <param name="listMidPoint">2个交点之间的路线</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.RayPathOptimization1.SearchOutPoint(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Collections.Generic.List{RayGraphics.Math.Double2})">
            <summary>
            获取最边缘一圈的顶点。
            </summary>
            <param name="lineStart">起点</param>
            <param name="far">远处的交点</param>
            <param name="outdir">外包边</param>
            <param name="listOutEdgePoint"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.RayPathOptimization1.CalcNearFarest(RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Collections.Generic.List{RayGraphics.Math.Double2},System.Int32@,System.Int32@)">
            <summary>
            计算超出线段范围
            </summary>
            <param name="lineStart"></param>
            <param name="lineEnd"></param>
            <param name="listMidPoint"></param>
            <param name="nearestIndex"></param>
            <param name="farestIndex"></param>
        </member>
        <member name="M:RayGraphics.Geometric.RayPathOptimization2.OptimizationLine(RayGraphics.Math.Float2,RayGraphics.Math.Float2,RayGraphics.Math.Float2,RayGraphics.Math.Float2,System.Boolean,System.Collections.Generic.List{RayGraphics.Math.Float2})">
            <summary>
            优化路线
            </summary>
            <param name="lineStart">线段起点</param>
            <param name="lineEnd">线段终点</param>
            <param name="near">与动态挡格相交 near点</param>
            <param name="far">与动态挡格相交 far点</param>
            <param name="listMidPoint">2个交点之间的路线</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.RayPathOptimization2.SearchOutPoint(RayGraphics.Math.Float2,RayGraphics.Math.Float2,RayGraphics.Math.Float2,System.Collections.Generic.List{RayGraphics.Math.Float2})">
            <summary>
            获取最边缘一圈的顶点。
            </summary>
            <param name="lineStart">起点</param>
            <param name="far">远处的交点</param>
            <param name="outdir">外包边</param>
            <param name="listOutEdgePoint"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.Polygon2DSetAnd">
            <summary>
            多边形和
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2DSetAnd.CalcPoly(RayGraphics.Math.Double2[],RayGraphics.Math.Double2[])">
            <summary>
            求多边形的和。  
            </summary>
            <param name="mainPoly">逆时针序列</param>
            <param name="addPoly">逆时针序列</param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Geometric.Polygon2DSetDiff">
            <summary>
            多边形差
            </summary>
        </member>
        <member name="M:RayGraphics.Geometric.Polygon2DSetDiff.CalcPoly(RayGraphics.Math.Double2[],RayGraphics.Math.Double2[])">
            <summary>
            求多边形的差。
            算法核心，主多边形走逆时针方向，diff多边形走顺时针方向。
            保证diffpoly多边形不会把mainpoly分成多个子部分。
            mainpoly> diffpoly
            </summary>
            <param name="mainPoly">逆时针序列</param>
            <param name="diffpoly">顺时针序列，必须顺时针序列</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.PolygonBool.ClearPolyIntersectArray(System.Collections.Generic.List{RayGraphics.Math.Double3}[]@,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@)">
            <summary>
            清理动作
            </summary>
            <param name="Poly1IntersectArray"></param>
            <param name="Poly2IntersectArray"></param>
        </member>
        <member name="M:RayGraphics.Geometric.PolygonBool.GetOtherEdge(RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,System.Int32)">
            <summary>
            获取另外一个多边形的边
            </summary>
            <param name="poly"></param>
            <param name="poly1"></param>
            <param name="poly2"></param>
            <param name="edgeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.PolygonBool.AddPoint(System.Collections.Generic.List{RayGraphics.Math.Double2},RayGraphics.Math.Double2)">
            <summary>
            加入顶点
            </summary>
            <param name="listPoint"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Geometric.PolygonBool.FindOutDiffPointPoint(RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,RayGraphics.Math.Double2@,System.Int32@)">
            <summary>
            主多边形上找到一个顶点，不在diff多边形内的。
            </summary>
            <param name="mainPoly"></param>
            <param name="diffpoly"></param>
            <param name="poly"></param>
            <param name="curedge"></param>
        </member>
        <member name="M:RayGraphics.Geometric.PolygonBool.ExChangePoly(RayGraphics.Geometric.Polygon2D@,RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@,System.Collections.Generic.List{RayGraphics.Math.Double3}[],System.Collections.Generic.List{RayGraphics.Math.Double3}[])">
            <summary>
            交换数据
            </summary>
            <param name="poly"></param>
            <param name="poly1"></param>
            <param name="poly2"></param>
        </member>
        <member name="M:RayGraphics.Geometric.PolygonBool.GetAllEdgeInterSectPoint(RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@,System.Collections.Generic.List{RayGraphics.Math.Double3}[]@)">
            <summary>
            获取多边形所有边的相交点
            </summary>
            <param name="mainPoly"></param>
            <param name="diffpoly"></param>
            <param name="mainPolyIntersectArray"></param>
            <param name="Poly2IntersectArray"></param>
        </member>
        <member name="M:RayGraphics.Geometric.PolygonBool.GetNearPointInEdge(RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Polygon2D,RayGraphics.Geometric.Point2D,RayGraphics.Math.Double2,System.Collections.Generic.List{RayGraphics.Math.Double3},RayGraphics.Math.Double3@)">
            <summary>
            多边形决策。
            </summary>
            <param name="ls2d"></param>
            <param name="targetPoint"></param>
            <param name="middlePoint"></param>
        </member>
        <member name="T:RayGraphics.Math.BlizzardHash">
            <summary>
            暴雪 hash 算法one-way hash 
            </summary>
        </member>
        <member name="F:RayGraphics.Math.BlizzardHash.m_CryptTable">
            <summary>
            表
            </summary>
        </member>
        <member name="M:RayGraphics.Math.BlizzardHash.PrepareTable">
            <summary>
            生成hash
            </summary>
        </member>
        <member name="M:RayGraphics.Math.BlizzardHash.HashString(System.String,System.UInt32)">
            <summary>
             Blizzard的这个算法是非常高效的，被称为"One-Way Hash"
             A one-way hash is a an algorithm that is constructed in such a way 
             that deriving the original string (set of strings, actually) is virtually impossible
            </summary>
            <param name="strValue"></param>
            <param name="dwHashType">hash 类型</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.BlizzardHash.GetHashTablePos(System.String,RayGraphics.Math.SomeHash[],System.Int32)">
            <summary>
            查找hash所在的位置
            </summary>
            <param name="strValue"></param>
            <param name="lpTable"></param>
            <param name="nTableSize"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Math.SomeHash">
            <summary>
            相同的hash
            </summary>
        </member>
        <member name="T:RayGraphics.Math.HashCodeHelp">
            <summary>
            hash函数
            </summary>
        </member>
        <member name="M:RayGraphics.Math.HashCodeHelp.hashCode(System.String)">
            <summary>
            String中hashCode方法
            算法：s[0]*31^(n-1) + s[1]*31^(n-2) + … + s[n-1]
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.HashCodeHelp.getHashCode(System.String)">
            <summary>
            一个比较好的字符串hash算法，add到这里，听说是微软用
            这个算法要保证str的长度是8的倍数，如果不够用0补齐，
            不然会导致越界，计算出的hash就不准确了。
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.HashCodeHelp.SDBMHash(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.HashCodeHelp.RSHash(System.String)">
            <summary>
            RS Hash Function
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.HashCodeHelp.JSHash(System.String)">
            <summary>
            JS Hash Function
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.HashCodeHelp.PJWHash(System.String)">
            <summary>
            P. J. Weinberger Hash Function
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.HashCodeHelp.ELFHash(System.String)">
            <summary>
            ELF Hash Function
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.HashCodeHelp.BKDRHash(System.String)">
            <summary>
            BKDR Hash Function
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.HashCodeHelp.DJBHash(System.String)">
            <summary>
            DJB Hash Function
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.HashCodeHelp.APHash(System.String)">
            <summary>
            AP Hash Function
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Math.Complex.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Complex.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Complex.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Complex.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Complex.GetAngle">
            <summary>
            求角度
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.GetConjugateComplex(RayGraphics.Math.Complex)">
            <summary>
            共轭复数
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.op_Inequality(RayGraphics.Math.Complex,RayGraphics.Math.Complex)">
            <summary>
            ！=
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.op_Equality(RayGraphics.Math.Complex,RayGraphics.Math.Complex)">
            <summary>
            ==
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.op_Addition(RayGraphics.Math.Complex,RayGraphics.Math.Complex)">
            <summary>
            +
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.op_Subtraction(RayGraphics.Math.Complex,RayGraphics.Math.Complex)">
            <summary>
            -
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.op_Multiply(System.Double,RayGraphics.Math.Complex)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.op_Multiply(RayGraphics.Math.Complex,System.Double)">
            <summary>
             * 运算
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.op_Division(RayGraphics.Math.Complex,System.Double)">
            <summary>
            /运算
            </summary>
            <param name="v"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.op_Multiply(RayGraphics.Math.Complex,RayGraphics.Math.Complex)">
            <summary>
            * 运算
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.op_Division(RayGraphics.Math.Complex,RayGraphics.Math.Complex)">
            <summary>
            / 运算,除法相当于都乘以一个共轭负数
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.Exp(System.Double)">
            <summary>
            指数函数
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Complex.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Set(System.Double,System.Double)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:RayGraphics.Math.Double2.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Math.Double2.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double2.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double2.normalized">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double2.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double2.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double2.down">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double2.up">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double2.left">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double2.right">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double2.negativeInfinity">
            <summary>
            负无穷大
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double2.positiveInfinity">
            <summary>
            无穷大
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Double2.op_Inequality(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            ！=
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.op_Equality(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            ==
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Double2.op_LessThan(RayGraphics.Math.Double2,RayGraphics.Math.Double2)" -->
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Double2.op_LessThanOrEqual(RayGraphics.Math.Double2,RayGraphics.Math.Double2)" -->
        <member name="M:RayGraphics.Math.Double2.op_GreaterThan(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.op_GreaterThanOrEqual(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.op_Addition(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            +
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.op_Subtraction(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            -
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.op_UnaryNegation(RayGraphics.Math.Double2)">
            <summary>
            负号重载
            </summary>
            <param name="v1"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.op_Multiply(System.Double,RayGraphics.Math.Double2)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.op_Multiply(RayGraphics.Math.Double2,System.Double)">
            <summary>
             * 运算
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.op_Division(RayGraphics.Math.Double2,System.Double)">
            <summary>
            /运算
            </summary>
            <param name="v"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Angle(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            夹角[0, PI]
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.CosAngle(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            求cos Angle
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.SinAngle(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            求sin Angle
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Area(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            向量组成的平行四边形的面积， 已经取绝对值。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.CheckInLine(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            共线判断，考虑误差
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.CheckVertical(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            垂直判断，考虑误差
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.ClampMagnitude(RayGraphics.Math.Double2,System.Double)">
            <summary>
            保持向量方向，调整向量长度
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Dot(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            点积
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Cross(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            叉积 , 可通过float3 的cross 推出，结果实际上就是z分量的值，因为，x，y分量都为0
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Distance(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            求距离
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Lerp(RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Double)">
            <summary>
            限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t">[0,1]</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.LerpUnclamped(RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Double)">
            <summary>
            非限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Max(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            获取max向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Min(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            获取Min向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.MoveTowards(RayGraphics.Math.Double2,RayGraphics.Math.Double2,System.Double)">
            <summary>
            朝目标向量移动maxDistanceDelta距离,未考虑移出。
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="maxDistanceDelta"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Project(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            vector 在 onNormal的投影
            </summary>
            <param name="vector"></param>
            <param name="onNormal"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Perpendicular(RayGraphics.Math.Double2)">
            <summary>
            返回逆时针旋转90度的向量
            </summary>
            <param name="inDirection"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Reflect(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            求发射光线
            </summary>
            <param name="inDirection">入射光线</param>
            <param name="inNormal">法线</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Scale(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            分量分别相乘，得到新的向量
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.Rotate(RayGraphics.Math.Double2,System.Double)">
            <summary>
            向量旋转
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.SignedAngle(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            求角度,逆时针为正， 瞬时值为负。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.CheckPointInCorns(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            判断目标点，在夹角内，
            </summary>
            <param name="target">目标点</param>
            <param name="startPoint">起点</param>
            <param name="indir">起点出发的2个边界向量</param>
            <param name="outdir">起点出发的2个边界向量</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double2.LeftOf(RayGraphics.Math.Double2,RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            当点target位于线p1p2的左侧时为负
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="target">目标点</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Set(System.Double,System.Double,System.Double)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="P:RayGraphics.Math.Double3.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Math.Double3.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.normalized">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.back">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.down">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.foward">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.left">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.right">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.up">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.negativeInfinity">
            <summary>
            负无穷大
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double3.positiveInfinity">
            <summary>
            无穷大
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Double3.op_Inequality(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.op_Equality(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.op_GreaterThan(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            > 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Double3.op_LessThan(RayGraphics.Math.Double3,RayGraphics.Math.Double3)" -->
        <member name="M:RayGraphics.Math.Double3.op_GreaterThanOrEqual(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            >= 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Double3.op_LessThanOrEqual(RayGraphics.Math.Double3,RayGraphics.Math.Double3)" -->
        <member name="M:RayGraphics.Math.Double3.op_Addition(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            + 运算
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.op_Subtraction(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            - 运算
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.op_Multiply(System.Double,RayGraphics.Math.Double3)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.op_Multiply(RayGraphics.Math.Double3,System.Double)">
            <summary>
            ×运算
            </summary>
            <param name="v"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.op_Division(RayGraphics.Math.Double3,System.Double)">
            <summary>
            ×运算
            </summary>
            <param name="v"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Equals(System.Object)">
            <summary>
            相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.GetHashCode">
            <summary>
            hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Angle(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            夹角[0, PI]
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.ClampMagnitude(RayGraphics.Math.Double3,System.Double)">
            <summary>
            保持向量方向，调整向量长度
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Cross(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            叉积 Cross Product of two vectors
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Dot(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            点积
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Distance(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            求距离
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Lerp(RayGraphics.Math.Double3,RayGraphics.Math.Double3,System.Double)">
            <summary>
            限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t">[0,1]</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.LerpUnclamped(RayGraphics.Math.Double3,RayGraphics.Math.Double3,System.Double)">
            <summary>
            非限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Max(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            获取max向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Min(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            获取Min向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.MoveTowards(RayGraphics.Math.Double3,RayGraphics.Math.Double3,System.Double)">
            <summary>
            朝目标向量移动maxDistanceDelta距离,未考虑移出。
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="maxDistanceDelta"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Project(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            vector 在 onNormal的投影
            </summary>
            <param name="vector"></param>
            <param name="onNormal"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.ProjectOnPlane(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            求向量vector 在平面上的投影
            </summary>
            <param name="vector"></param>
            <param name="planeNormal">平面法向量</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Reflect(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            求发射光线
            </summary>
            <param name="inDirection">入射光线</param>
            <param name="inNormal">法线</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Scale(RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            分量分别相乘，得到新的向量
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.SignedAngle(RayGraphics.Math.Double3,RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            求角度
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="axis">from, to 的垂直轴</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.RotateTowards(RayGraphics.Math.Double3,RayGraphics.Math.Double3,System.Double,System.Double)">
            <summary>
            绕目标轴旋转
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="maxRadiansDelta"></param>
            <param name="maxMagnitudeDelta"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.Slerp(RayGraphics.Math.Double3,RayGraphics.Math.Double3,System.Double)">
            <summary>
            Spherically interpolates between two vectors 向量球面插值
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.SlerpUnclamped(RayGraphics.Math.Double3,RayGraphics.Math.Double3,System.Double)">
            <summary>
            Spherically interpolates between two vectors. 向量球面插值，非限制
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double3.SmoothDamp(RayGraphics.Math.Double3,RayGraphics.Math.Double3,RayGraphics.Math.Double3@,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="currentVelocity"></param>
            <param name="smoothTime"></param>
            <param name="maxSpeed"></param>
            <param name="deltaTime"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
        </member>
        <member name="M:RayGraphics.Math.Double4.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
        </member>
        <member name="M:RayGraphics.Math.Double4.Set(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="P:RayGraphics.Math.Double4.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Math.Double4.s_zero">
            <summary>
            0
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Double4.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Double4.op_Inequality(RayGraphics.Math.Double4,RayGraphics.Math.Double4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double4.op_Equality(RayGraphics.Math.Double4,RayGraphics.Math.Double4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double4.op_Addition(RayGraphics.Math.Double4,RayGraphics.Math.Double4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double4.op_Subtraction(RayGraphics.Math.Double4,RayGraphics.Math.Double4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double4.op_Multiply(System.Double,RayGraphics.Math.Double4)">
            <summary>
            
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double4.op_Multiply(RayGraphics.Math.Double4,System.Double)">
            <summary>
            
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Double4.Dot(RayGraphics.Math.Double4,RayGraphics.Math.Double4)">
            <summary>
            点积
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Set(System.Single,System.Single)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:RayGraphics.Math.Float2.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Math.Float2.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float2.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float2.normalized">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float2.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float2.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float2.down">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float2.up">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float2.left">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float2.right">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float2.negativeInfinity">
            <summary>
            负无穷大
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float2.positiveInfinity">
            <summary>
            无穷大
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Float2.op_GreaterThan(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            > 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Float2.op_LessThan(RayGraphics.Math.Float2,RayGraphics.Math.Float2)" -->
        <member name="M:RayGraphics.Math.Float2.op_GreaterThanOrEqual(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            >= 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Float2.op_LessThanOrEqual(RayGraphics.Math.Float2,RayGraphics.Math.Float2)" -->
        <member name="M:RayGraphics.Math.Float2.op_UnaryNegation(RayGraphics.Math.Float2)">
            <summary>
            负号重载
            </summary>
            <param name="v1"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.op_Multiply(System.Single,RayGraphics.Math.Float2)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.op_Multiply(RayGraphics.Math.Float2,System.Single)">
            <summary>
             * 运算
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.op_Division(RayGraphics.Math.Float2,System.Single)">
            <summary>
            /运算
            </summary>
            <param name="v"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Angle(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            夹角[0, PI]
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.CosAngle(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            求cos Angle
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.SinAngle(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            求sin Angle
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Area(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            向量组成的平行四边形的面积， 已经取绝对值。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.CheckInLine(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            共线判断，考虑误差
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.CheckVertical(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            垂直判断，考虑误差
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.ClampMagnitude(RayGraphics.Math.Float2,System.Single)">
            <summary>
            保持向量方向，调整向量长度
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Dot(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            点积
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Cross(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            叉积 , 可通过float3 的cross 推出，结果实际上就是z分量的值，因为，x，y分量都为0
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Distance(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            求距离
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Lerp(RayGraphics.Math.Float2,RayGraphics.Math.Float2,System.Single)">
            <summary>
            限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t">[0,1]</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.LerpUnclamped(RayGraphics.Math.Float2,RayGraphics.Math.Float2,System.Single)">
            <summary>
            非限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Max(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            获取max向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Min(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            获取Min向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.MoveTowards(RayGraphics.Math.Float2,RayGraphics.Math.Float2,System.Single)">
            <summary>
            朝目标向量移动maxDistanceDelta距离,未考虑移出。
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="maxDistanceDelta"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Project(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            vector 在 onNormal的投影
            </summary>
            <param name="vector"></param>
            <param name="onNormal"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Perpendicular(RayGraphics.Math.Float2)">
            <summary>
            返回逆时针旋转90度的向量
            </summary>
            <param name="inDirection"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Reflect(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            求发射光线
            </summary>
            <param name="inDirection">入射光线</param>
            <param name="inNormal">法线</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Scale(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            分量分别相乘，得到新的向量
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.Rotate(RayGraphics.Math.Float2,System.Double)">
            <summary>
            向量旋转
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.SignedAngle(RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            求角度,逆时针为正， 瞬时值为负。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.CheckPointInCorns(RayGraphics.Math.Float2,RayGraphics.Math.Float2,RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            判断目标点，在夹角内，
            </summary>
            <param name="target">目标点</param>
            <param name="startPoint">起点</param>
            <param name="indir">起点出发的2个边界向量</param>
            <param name="outdir">起点出发的2个边界向量</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float2.LeftOf(RayGraphics.Math.Float2,RayGraphics.Math.Float2,RayGraphics.Math.Float2)">
            <summary>
            当点target位于线p1p2的左侧时为负
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="target">目标点</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Set(System.Single,System.Single,System.Single)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="P:RayGraphics.Math.Float3.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Math.Float3.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.normalized">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.back">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.down">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.foward">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.left">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.right">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.up">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.negativeInfinity">
            <summary>
            负无穷大
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float3.positiveInfinity">
            <summary>
            无穷大
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Float3.op_Inequality(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.op_Equality(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.op_GreaterThan(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            > 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Float3.op_LessThan(RayGraphics.Math.Float3,RayGraphics.Math.Float3)" -->
        <member name="M:RayGraphics.Math.Float3.op_GreaterThanOrEqual(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            >= 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Float3.op_LessThanOrEqual(RayGraphics.Math.Float3,RayGraphics.Math.Float3)" -->
        <member name="M:RayGraphics.Math.Float3.op_Addition(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            + 运算
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.op_Subtraction(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            - 运算
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.op_Multiply(System.Single,RayGraphics.Math.Float3)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.op_Multiply(RayGraphics.Math.Float3,System.Single)">
            <summary>
            ×运算
            </summary>
            <param name="v"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.op_Division(RayGraphics.Math.Float3,System.Single)">
            <summary>
            ×运算
            </summary>
            <param name="v"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Equals(System.Object)">
            <summary>
            相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.GetHashCode">
            <summary>
            hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Angle(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            夹角[0, PI]
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.ClampMagnitude(RayGraphics.Math.Float3,System.Single)">
            <summary>
            保持向量方向，调整向量长度
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Cross(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            叉积 Cross Product of two vectors
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Dot(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            点积
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Distance(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            求距离
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Lerp(RayGraphics.Math.Float3,RayGraphics.Math.Float3,System.Single)">
            <summary>
            限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t">[0,1]</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.LerpUnclamped(RayGraphics.Math.Float3,RayGraphics.Math.Float3,System.Single)">
            <summary>
            非限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Max(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            获取max向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Min(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            获取Min向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.MoveTowards(RayGraphics.Math.Float3,RayGraphics.Math.Float3,System.Single)">
            <summary>
            朝目标向量移动maxDistanceDelta距离,未考虑移出。
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="maxDistanceDelta"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Project(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            vector 在 onNormal的投影
            </summary>
            <param name="vector"></param>
            <param name="onNormal"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.ProjectOnPlane(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            求向量vector 在平面上的投影
            </summary>
            <param name="vector"></param>
            <param name="planeNormal">平面法向量</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Reflect(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            求发射光线
            </summary>
            <param name="inDirection">入射光线</param>
            <param name="inNormal">法线</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Scale(RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            分量分别相乘，得到新的向量
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.SignedAngle(RayGraphics.Math.Float3,RayGraphics.Math.Float3,RayGraphics.Math.Float3)">
            <summary>
            求角度
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="axis">from, to 的垂直轴</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.RotateTowards(RayGraphics.Math.Float3,RayGraphics.Math.Float3,System.Single,System.Single)">
            <summary>
            绕目标轴旋转
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="maxRadiansDelta"></param>
            <param name="maxMagnitudeDelta"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.Slerp(RayGraphics.Math.Float3,RayGraphics.Math.Float3,System.Single)">
            <summary>
            Spherically interpolates between two vectors 向量球面插值
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.SlerpUnclamped(RayGraphics.Math.Float3,RayGraphics.Math.Float3,System.Single)">
            <summary>
            Spherically interpolates between two vectors. 向量球面插值，非限制
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float3.SmoothDamp(RayGraphics.Math.Float3,RayGraphics.Math.Float3,RayGraphics.Math.Float3@,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="currentVelocity"></param>
            <param name="smoothTime"></param>
            <param name="maxSpeed"></param>
            <param name="deltaTime"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
        </member>
        <member name="M:RayGraphics.Math.Float4.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
        </member>
        <member name="M:RayGraphics.Math.Float4.Set(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="P:RayGraphics.Math.Float4.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Math.Float4.s_zero">
            <summary>
            0
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Float4.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Float4.op_Inequality(RayGraphics.Math.Float4,RayGraphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float4.op_Equality(RayGraphics.Math.Float4,RayGraphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float4.op_Addition(RayGraphics.Math.Float4,RayGraphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float4.op_Subtraction(RayGraphics.Math.Float4,RayGraphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float4.op_Multiply(System.Single,RayGraphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float4.op_Multiply(RayGraphics.Math.Float4,System.Single)">
            <summary>
            
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Float4.Dot(RayGraphics.Math.Float4,RayGraphics.Math.Float4)">
            <summary>
            点积
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Index3.CheckContain(System.Int32)">
            <summary>
            是否包含
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Index3.CheckContain(System.Int32,System.Int32)">
            <summary>
            是否包含
            </summary>
            <param name="index1"></param>
            <param name="index2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Index3.CheckContain(RayGraphics.Math.Index2)">
            <summary>
            是否包含
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.Set(System.Int32,System.Int32)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:RayGraphics.Math.Int2.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Math.Int2.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.down">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.up">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.left">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.right">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.rightDown">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.rightUp">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.leftDown">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int2.leftUp">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Int2.op_Inequality(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            ！=
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.op_Equality(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            ==
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.op_GreaterThan(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            > 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Int2.op_LessThan(RayGraphics.Math.Int2,RayGraphics.Math.Int2)" -->
        <member name="M:RayGraphics.Math.Int2.op_GreaterThanOrEqual(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            >= 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Int2.op_LessThanOrEqual(RayGraphics.Math.Int2,RayGraphics.Math.Int2)" -->
        <member name="M:RayGraphics.Math.Int2.op_Addition(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            +
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.op_Subtraction(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            -
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.op_UnaryNegation(RayGraphics.Math.Int2)">
            <summary>
            负号重载
            </summary>
            <param name="v1"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.op_Multiply(System.Int32,RayGraphics.Math.Int2)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.op_Multiply(RayGraphics.Math.Int2,System.Int32)">
            <summary>
             * 运算
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.Angle(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            夹角[0, PI]
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.CosAngle(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            求cos Angle
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.SinAngle(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            求sin Angle
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.Distance(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            求距离
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.Area(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            向量组成的平行四边形的面积， 已经取绝对值。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.CheckInLine(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            共线判断，考虑误差
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.CheckVertical(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            垂直判断，考虑误差
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.Dot(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            点积
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.Cross(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            叉积 , 可通过float3 的cross 推出，结果实际上就是z分量的值，因为，x，y分量都为0
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.Max(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            获取max向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.Min(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            获取Min向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int2.Scale(RayGraphics.Math.Int2,RayGraphics.Math.Int2)">
            <summary>
            分量分别相乘，得到新的向量
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int3.Set(System.Int32,System.Int32,System.Int32)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:RayGraphics.Math.Int3.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Math.Int3.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int3.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int3.invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int3.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int3.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int3.down">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int3.up">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int3.left">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int3.right">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int3.back">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Int3.foward">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Int3.op_Inequality(RayGraphics.Math.Int3,RayGraphics.Math.Int3)">
            <summary>
            ！=
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int3.op_Equality(RayGraphics.Math.Int3,RayGraphics.Math.Int3)">
            <summary>
            ==
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int3.op_GreaterThan(RayGraphics.Math.Int3,RayGraphics.Math.Int3)">
            <summary>
            > 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Int3.op_LessThan(RayGraphics.Math.Int3,RayGraphics.Math.Int3)" -->
        <member name="M:RayGraphics.Math.Int3.op_GreaterThanOrEqual(RayGraphics.Math.Int3,RayGraphics.Math.Int3)">
            <summary>
            >= 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Int3.op_LessThanOrEqual(RayGraphics.Math.Int3,RayGraphics.Math.Int3)" -->
        <member name="M:RayGraphics.Math.Int3.op_Addition(RayGraphics.Math.Int3,RayGraphics.Math.Int3)">
            <summary>
            +
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int3.op_Subtraction(RayGraphics.Math.Int3,RayGraphics.Math.Int3)">
            <summary>
            -
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int3.op_UnaryNegation(RayGraphics.Math.Int3)">
            <summary>
            负号重载
            </summary>
            <param name="v1"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int3.op_Multiply(System.Int32,RayGraphics.Math.Int3)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int3.op_Multiply(RayGraphics.Math.Int3,System.Int32)">
            <summary>
             * 运算
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int3.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Int3.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Math.MathFunc.kMaxCircleAngle">
            <summary>
            圆周划分数
            </summary>
        </member>
        <member name="F:RayGraphics.Math.MathFunc.kHalfMaxCircleAngle">
            <summary>
            圆周划分半数
            </summary>
        </member>
        <member name="F:RayGraphics.Math.MathFunc.kQuarterMaxCircleAngle">
            <summary>
            圆周划分四分数
            </summary>
        </member>
        <member name="F:RayGraphics.Math.MathFunc.kMaskMaxCircleAngle">
            <summary>
            最大索引数
            </summary>
        </member>
        <member name="F:RayGraphics.Math.MathFunc.kpAngle">
            <summary>
            每一份所代表的弧度
            </summary>
        </member>
        <member name="F:RayGraphics.Math.MathFunc.ktpAngle">
            <summary>
            每一份所代表的弧度倒数
            </summary>
        </member>
        <member name="F:RayGraphics.Math.MathFunc.fast_cossin_table">
            <summary>
            Declare table of fast cosinus and sinus
            </summary>
        </member>
        <member name="M:RayGraphics.Math.MathFunc.Cos(System.Single)">
            <summary>
            获取Cos 函数
            </summary>
            <param name="angle">弧度制</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.MathFunc.fastsin(System.Single)">
            <summary>
            获取sin 函数
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.MathFunc.MakeTable">
            <summary>
            生成表
            </summary>
        </member>
        <member name="M:RayGraphics.Math.MathFunc.ClearTable">
            <summary>
            清理表格数据
            </summary>
        </member>
        <member name="M:RayGraphics.Math.MathFunc.cosAngle(System.Double)">
            <summary>
            计算cos angle
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.MathFunc.sinAngle(System.Double)">
            <summary>
            计算sin angle
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.MathFunc.GetAngle(System.Double,System.Double)">
            <summary>
            求angle，[-PI,  PI]
            </summary>
            <param name="cosValue"></param>
            <param name="sinValue"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Math.MathUtil.StraightDistance">
            <summary>
            直角增加的IntegrationValue
            </summary>
        </member>
        <member name="F:RayGraphics.Math.MathUtil.DiagonalDistance">
            <summary>
            对角增加的IntegrationValue
            </summary>
        </member>
        <member name="F:RayGraphics.Math.MathUtil.kEpsilon">
            <summary>
            误差
            </summary>
        </member>
        <member name="F:RayGraphics.Math.MathUtil.kEpsilonNormalSqrt">
            <summary>
            误差
            </summary>
        </member>
        <member name="F:RayGraphics.Math.MathUtil.kPI">
            <summary>
            pi 常量
            </summary>
        </member>
        <member name="M:RayGraphics.Math.MathUtil.GetCompareDis(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            获取2点评估距离/ 跳点距离
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.MathUtil.GetNearDistance(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            获取2点评估距离/ 跳点距离
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.MathUtil.GetNearDistance(RayGraphics.Math.Double2)">
            <summary>
            计算向量的长度
            </summary>
            <param name="diff"></param>
            <returns></returns>
        </member>
        <member name="T:RayGraphics.Math.LineRelation">
            <summary>
            线关系
            </summary>
        </member>
        <member name="F:RayGraphics.Math.LineRelation.None">
            <summary>
            异常情况
            </summary>
        </member>
        <member name="F:RayGraphics.Math.LineRelation.Coincide">
            <summary>
            重合
            </summary>
        </member>
        <member name="F:RayGraphics.Math.LineRelation.Parallel">
            <summary>
            平行
            </summary>
        </member>
        <member name="F:RayGraphics.Math.LineRelation.Intersect">
            <summary>
            相交
            </summary>
        </member>
        <member name="F:RayGraphics.Math.LineRelation.Detach">
            <summary>
            分离
            </summary>
        </member>
        <member name="T:RayGraphics.Math.PolygonType">
            <summary>
            多边形
            </summary>
        </member>
        <member name="F:RayGraphics.Math.PolygonType.Convex">
            <summary>
            凸多边形
            </summary>
        </member>
        <member name="F:RayGraphics.Math.PolygonType.Concave">
            <summary>
            凹多边形
            </summary>
        </member>
        <member name="T:RayGraphics.Math.ProjectPointInLine">
            <summary>
            投影点在线上的关系
            </summary>
        </member>
        <member name="F:RayGraphics.Math.ProjectPointInLine.OutStart">
            <summary>
            重合
            </summary>
        </member>
        <member name="F:RayGraphics.Math.ProjectPointInLine.In">
            <summary>
            平行
            </summary>
        </member>
        <member name="F:RayGraphics.Math.ProjectPointInLine.OutEnd">
            <summary>
            相交
            </summary>
        </member>
        <member name="T:RayGraphics.Math.RBIResultType">
            <summary>
            射线包围盒返回类型
            </summary>
        </member>
        <member name="F:RayGraphics.Math.RBIResultType.Fail">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:RayGraphics.Math.RBIResultType.Succ">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:RayGraphics.Math.RBIResultType.UnCross">
            <summary>
            通不过
            </summary>
        </member>
        <member name="F:RayGraphics.Math.RBIResultType.UnCrossstartPointIn">
            <summary>
            通不过
            </summary>
        </member>
        <member name="F:RayGraphics.Math.RBIResultType.UnCrossendPointIn">
            <summary>
            通不过
            </summary>
        </member>
        <member name="F:RayGraphics.Math.Matrix2x2.col1">
            <summary>
            第一行
            </summary>
        </member>
        <member name="F:RayGraphics.Math.Matrix2x2.col2">
            <summary>
            第二行
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix2x2.row1">
            <summary>
            第一列
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix2x2.row2">
            <summary>
            第二列
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.#ctor(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            
            </summary>
            <param name="col1"></param>
            <param name="col2"></param>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.Set(RayGraphics.Math.Double2,RayGraphics.Math.Double2)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:RayGraphics.Math.Matrix2x2.Item(System.Int32,System.Int32)">
            <summary>
            索引访问
            </summary>
            <param name="col"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Math.Matrix2x2.zero">
            <summary>
            0 矩阵
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix2x2.one">
            <summary>
            单位矩阵
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.RotateMatrix(System.Double)">
            <summary>
            旋转矩阵，逆时针旋转angle
            </summary>
            <param name="angle">旋转角度</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.ScaleMatrix(System.Double,System.Double)">
            <summary>
            缩放矩阵
            </summary>
            <param name="scaleX"></param>
            <param name="scaleY"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.ScaleMatrix(System.Single)">
            <summary>
            缩放矩阵
            </summary>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.ScaleMatrix(RayGraphics.Math.Double2,System.Single)">
            <summary>
            沿着指定轴进行缩放
            </summary>
            <param name="axis">指定轴的法向量</param>
            <param name="scale">缩放比例</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.XOrthogonalProjectionMatrix">
            <summary>
            投影到X轴的正交投影矩阵
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.YOrthogonalProjectionMatrix">
            <summary>
            投影到X轴的正交投影矩阵
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.op_Inequality(RayGraphics.Math.Matrix2x2,RayGraphics.Math.Matrix2x2)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.op_Equality(RayGraphics.Math.Matrix2x2,RayGraphics.Math.Matrix2x2)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.op_Addition(RayGraphics.Math.Matrix2x2,RayGraphics.Math.Matrix2x2)">
            <summary>
            矩阵+
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.op_Subtraction(RayGraphics.Math.Matrix2x2,RayGraphics.Math.Matrix2x2)">
            <summary>
            矩阵-
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.op_Multiply(System.Double,RayGraphics.Math.Matrix2x2)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.op_Multiply(RayGraphics.Math.Matrix2x2,System.Double)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.op_Multiply(RayGraphics.Math.Matrix2x2,RayGraphics.Math.Matrix2x2)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.op_Multiply(RayGraphics.Math.Matrix2x2,RayGraphics.Math.Double2)">
            <summary>
            * 运算
            </summary>
            <param name="m"></param>
            <param name="v">作为列向量</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.op_Multiply(RayGraphics.Math.Double2,RayGraphics.Math.Matrix2x2)">
            <summary>
            * 运算
            </summary>
            <param name="v">作为行向量</param>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.Equals(System.Object)">
            <summary>
            * 运算
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.GetT">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.T(RayGraphics.Math.Matrix2x2)">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.GetCovarianceMatrix(RayGraphics.Math.Double2[])">
            <summary>
            计算协方差举证
            https://zhuanlan.zhihu.com/p/37609917
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix2x2.GetFeatureVectorMatrix(RayGraphics.Math.Matrix2x2)">
            <summary>
            求特征向量矩阵 通过使用Jacobi 迭代算法
            </summary>
            <param name="matrix"></param>
        </member>
        <member name="F:RayGraphics.Math.Matrix3x3.col1">
            <summary>
            第一行
            </summary>
        </member>
        <member name="F:RayGraphics.Math.Matrix3x3.col2">
            <summary>
            第二行
            </summary>
        </member>
        <member name="F:RayGraphics.Math.Matrix3x3.col3">
            <summary>
            第三行
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix3x3.row1">
            <summary>
            第一列
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix3x3.row2">
            <summary>
            第二列
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix3x3.row3">
            <summary>
            第二列
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix3x3.Item(System.Int32,System.Int32)">
            <summary>
            索引访问
            </summary>
            <param name="col"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.#ctor(RayGraphics.Math.Double3,RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            
            </summary>
            <param name="col1"></param>
            <param name="col2"></param>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.Set(RayGraphics.Math.Double3,RayGraphics.Math.Double3,RayGraphics.Math.Double3)">
            <summary>
            
            </summary>
            <param name="col1"></param>
            <param name="col2"></param>
            <param name="col3"></param>
        </member>
        <member name="P:RayGraphics.Math.Matrix3x3.zero">
            <summary>
            0 矩阵
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix3x3.one">
            <summary>
            单位矩阵
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.RotateZMatrix(System.Double)">
            <summary>
            绕Z旋转
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.RotateXMatrix(System.Double)">
            <summary>
            绕X旋转
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.RotateMatrix(RayGraphics.Math.Double3,System.Double)">
            <summary>
            绕轴旋转
            </summary>
            <param name="axis">轴的法向量</param>
            <param name="angle">旋转角度</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.RotateYMatrix(System.Double)">
            <summary>
            绕Y旋转
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.ScaleMatrix(System.Single,System.Single,System.Single)">
            <summary>
            缩放矩阵
            </summary>
            <param name="scaleX"></param>
            <param name="scaleY"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.ScaleMatrix(System.Single)">
            <summary>
            缩放矩阵
            </summary>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.ScaleMatrix(RayGraphics.Math.Double3,System.Single)">
            <summary>
            沿着指定轴进行缩放
            </summary>
            <param name="axis">指定轴的法向量</param>
            <param name="scale">缩放比例</param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.XYOrthogonalProjectionMatrix">
            <summary>
            投影到XY平面的正交投影矩阵
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.XZOrthogonalProjectionMatrix">
            <summary>
            投影到XZ平面的正交投影矩阵
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.YZOrthogonalProjectionMatrix">
            <summary>
            投影到XZ平面的正交投影矩阵
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.op_Inequality(RayGraphics.Math.Matrix3x3,RayGraphics.Math.Matrix3x3)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.op_Equality(RayGraphics.Math.Matrix3x3,RayGraphics.Math.Matrix3x3)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.op_Addition(RayGraphics.Math.Matrix3x3,RayGraphics.Math.Matrix3x3)">
            <summary>
            矩阵+
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.op_Subtraction(RayGraphics.Math.Matrix3x3,RayGraphics.Math.Matrix3x3)">
            <summary>
            矩阵-
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.op_Multiply(System.Double,RayGraphics.Math.Matrix3x3)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.op_Multiply(RayGraphics.Math.Matrix3x3,System.Double)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.op_Multiply(RayGraphics.Math.Matrix3x3,RayGraphics.Math.Matrix3x3)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.op_Multiply(RayGraphics.Math.Matrix3x3,RayGraphics.Math.Double3)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.op_Multiply(RayGraphics.Math.Double3,RayGraphics.Math.Matrix3x3)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.Equals(System.Object)">
            <summary>
            * 运算
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.GetT">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix3x3.T(RayGraphics.Math.Matrix3x3)">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="F:RayGraphics.Math.Matrix4x4.col1">
            <summary>
            第一行
            </summary>
        </member>
        <member name="F:RayGraphics.Math.Matrix4x4.col2">
            <summary>
            第二行
            </summary>
        </member>
        <member name="F:RayGraphics.Math.Matrix4x4.col3">
            <summary>
            第三行
            </summary>
        </member>
        <member name="F:RayGraphics.Math.Matrix4x4.col4">
            <summary>
            第四行
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix4x4.row1">
            <summary>
            
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix4x4.row2">
            <summary>
            第二列
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix4x4.row3">
            <summary>
            第二列
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix4x4.row4">
            <summary>
            第二列
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix4x4.Item(System.Int32,System.Int32)">
            <summary>
            索引访问
            </summary>
            <param name="col"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.#ctor(RayGraphics.Math.Double4,RayGraphics.Math.Double4,RayGraphics.Math.Double4,RayGraphics.Math.Double4)">
            <summary>
            
            </summary>
            <param name="col1"></param>
            <param name="col2"></param>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.Set(RayGraphics.Math.Double4,RayGraphics.Math.Double4,RayGraphics.Math.Double4,RayGraphics.Math.Double4)">
            <summary>
            
            </summary>
            <param name="col1"></param>
            <param name="col2"></param>
            <param name="col3"></param>
        </member>
        <member name="P:RayGraphics.Math.Matrix4x4.zero">
            <summary>
            0 矩阵
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Matrix4x4.one">
            <summary>
            单位矩阵
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.op_Inequality(RayGraphics.Math.Matrix4x4,RayGraphics.Math.Matrix4x4)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.op_Equality(RayGraphics.Math.Matrix4x4,RayGraphics.Math.Matrix4x4)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.op_Addition(RayGraphics.Math.Matrix4x4,RayGraphics.Math.Matrix4x4)">
            <summary>
            矩阵+
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.op_Subtraction(RayGraphics.Math.Matrix4x4,RayGraphics.Math.Matrix4x4)">
            <summary>
            矩阵-
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.op_Multiply(System.Double,RayGraphics.Math.Matrix4x4)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.op_Multiply(RayGraphics.Math.Matrix4x4,System.Double)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.op_Multiply(RayGraphics.Math.Matrix4x4,RayGraphics.Math.Matrix4x4)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.op_Multiply(RayGraphics.Math.Matrix4x4,RayGraphics.Math.Double4)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.op_Multiply(RayGraphics.Math.Double4,RayGraphics.Math.Matrix4x4)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.Equals(System.Object)">
            <summary>
            * 运算
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.GetT">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Matrix4x4.T(RayGraphics.Math.Matrix4x4)">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.Set(System.Int16,System.Int16)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:RayGraphics.Math.Short2.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Math.Short2.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.down">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.up">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.left">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.right">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.rightDown">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.rightUp">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.leftDown">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short2.leftUp">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Short2.op_Inequality(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            !=
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.op_Equality(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            ==
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.op_GreaterThan(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            > 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Short2.op_LessThan(RayGraphics.Math.Short2,RayGraphics.Math.Short2)" -->
        <member name="M:RayGraphics.Math.Short2.op_GreaterThanOrEqual(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            >= 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Short2.op_LessThanOrEqual(RayGraphics.Math.Short2,RayGraphics.Math.Short2)" -->
        <member name="M:RayGraphics.Math.Short2.op_Addition(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            +
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.op_Subtraction(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            -
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.op_UnaryNegation(RayGraphics.Math.Short2)">
            <summary>
            负号重载
            </summary>
            <param name="v1"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.op_Multiply(System.Int32,RayGraphics.Math.Short2)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.op_Multiply(RayGraphics.Math.Short2,System.Int32)">
            <summary>
             * 运算
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.Angle(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            夹角[0, PI]
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.CosAngle(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            求cos Angle
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.SinAngle(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            求sin Angle
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.Area(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            向量组成的平行四边形的面积， 已经取绝对值。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.CheckInLine(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            共线判断，考虑误差
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.CheckVertical(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            垂直判断，考虑误差
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Short2.Dot(RayGraphics.Math.Short2,RayGraphics.Math.Short2)" -->
        <member name="M:RayGraphics.Math.Short2.Cross(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            叉积 , 可通过float3 的cross 推出，结果实际上就是z分量的值，因为，x，y分量都为0
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.Distance(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            求距离
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.Max(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            获取max向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.Min(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            获取Min向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short2.Scale(RayGraphics.Math.Short2,RayGraphics.Math.Short2)">
            <summary>
            分量分别相乘，得到新的向量
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short3.Set(System.Int16,System.Int16,System.Int16)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:RayGraphics.Math.Short3.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Math.Short3.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short3.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short3.invalid">
            <summary>
            无效
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short3.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short3.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short3.down">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short3.up">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short3.left">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short3.right">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short3.back">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:RayGraphics.Math.Short3.foward">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="M:RayGraphics.Math.Short3.op_Inequality(RayGraphics.Math.Short3,RayGraphics.Math.Short3)">
            <summary>
            ！=
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short3.op_Equality(RayGraphics.Math.Short3,RayGraphics.Math.Short3)">
            <summary>
            ==
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short3.op_GreaterThan(RayGraphics.Math.Short3,RayGraphics.Math.Short3)">
            <summary>
            > 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Short3.op_LessThan(RayGraphics.Math.Short3,RayGraphics.Math.Short3)" -->
        <member name="M:RayGraphics.Math.Short3.op_GreaterThanOrEqual(RayGraphics.Math.Short3,RayGraphics.Math.Short3)">
            <summary>
            >= 运算符
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:RayGraphics.Math.Short3.op_LessThanOrEqual(RayGraphics.Math.Short3,RayGraphics.Math.Short3)" -->
        <member name="M:RayGraphics.Math.Short3.op_Addition(RayGraphics.Math.Short3,RayGraphics.Math.Short3)">
            <summary>
            +
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short3.op_Subtraction(RayGraphics.Math.Short3,RayGraphics.Math.Short3)">
            <summary>
            -
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short3.op_UnaryNegation(RayGraphics.Math.Short3)">
            <summary>
            负号重载
            </summary>
            <param name="v1"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short3.op_Multiply(System.Int32,RayGraphics.Math.Short3)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short3.op_Multiply(RayGraphics.Math.Short3,System.Int32)">
            <summary>
             * 运算
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short3.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Math.Short3.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:RayGraphics.Triangulation.Polygon2D.Vertices">
            <summary>
            顶点
            </summary>
        </member>
        <member name="P:RayGraphics.Triangulation.Polygon2D.Segments">
            <summary>
            线段
            </summary>
        </member>
        <member name="M:RayGraphics.Triangulation.Polygon2D.ConvexHull(RayGraphics.Math.Float2[])">
            <summary>
            凸多边形
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Triangulation.Polygon2D.Contour(RayGraphics.Math.Float2[])">
            <summary>
            生成轮廓
            </summary>
            <param name="points"></param>
            <returns></returns>
        </member>
        <member name="M:RayGraphics.Triangulation.Polygon2D.#ctor(System.Collections.Generic.List{RayGraphics.Math.Float2})">
            <summary>
            逆时针序
            </summary>
            <param name="listContour"></param>
        </member>
        <member name="P:RayGraphics.Triangulation.Triangulation2D.Polygon">
            <summary>
            多边形
            </summary>
        </member>
        <member name="P:RayGraphics.Triangulation.Triangulation2D.Triangles">
            <summary>
            三角形
            </summary>
        </member>
        <member name="P:RayGraphics.Triangulation.Triangulation2D.Edges">
            <summary>
            边
            </summary>
        </member>
        <member name="P:RayGraphics.Triangulation.Triangulation2D.Points">
            <summary>
            顶点
            </summary>
        </member>
        <member name="M:RayGraphics.Triangulation.Triangulation2D.#ctor(RayGraphics.Triangulation.Polygon2D,System.Single,System.Single)">
            <summary>
            构建
            </summary>
            <param name="polygon"></param>
            <param name="angle"></param>
            <param name="threshold"></param>
        </member>
        <member name="M:RayGraphics.Triangulation.Triangulation2D.Bound(RayGraphics.Math.Float2[],RayGraphics.Math.Float2@,RayGraphics.Math.Float2@)">
            <summary>
            计算bound
            </summary>
            <param name="points"></param>
            <param name="min"></param>
            <param name="max"></param>
        </member>
    </members>
</doc>

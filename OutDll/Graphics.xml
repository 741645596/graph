<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Graphics</name>
    </assembly>
    <members>
        <member name="T:Graphics.Tree.BspTree">
            <summary>
            Binary space partitioning,BSP bsp tree
            </summary>
        </member>
        <member name="T:Graphics.Tree.Bvh">
            <summary>
            bounding volume hierarchy 层次包围盒
            </summary>
        </member>
        <member name="T:Graphics.Bounding.AABB">
            <summary>
            AABB包围盒(Axis-aligned bounding box)
            </summary>
        </member>
        <member name="T:Graphics.Bounding.OBB">
            <summary>
            OBB方向包围盒(Oriented bounding box)
            </summary>
        </member>
        <member name="T:Graphics.Bounding.Sphere">
            <summary>
            球形包围盒
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Circle2D.center">
            <summary>
            中心
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Circle2D.radius">
            <summary>
            半价
            </summary>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.CheckIn(Graphics.Math.Float2)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.CalcDistance(Graphics.Math.Float2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.ProjectPoint(Graphics.Math.Float2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.AixsVector(Graphics.Math.Float2)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.CheckLineRelation(Graphics.Geometric.Line2D)">
            <summary>
            与直线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.CheckLineRelation(Graphics.Geometric.Rays2D)">
            <summary>
            直线与射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.CheckLineRelation(Graphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.GetIntersectPoint(Graphics.Geometric.Line2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.GetIntersectPoint(Graphics.Geometric.Rays2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.GetIntersectPoint(Graphics.Geometric.LineSegment2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Circle2D.GetMirrorPoint(Graphics.Math.Float2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.CheckIn(Graphics.Math.Float2)">
            <summary>
            判断点是否在几何元素上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.CalcDistance(Graphics.Math.Float2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.ProjectPoint(Graphics.Math.Float2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.AixsVector(Graphics.Math.Float2)">
            <summary>
            点到几何元素轴向量（垂直），交点-》pt
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.CheckLineRelation(Graphics.Geometric.Line2D)">
            <summary>
            与直线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.CheckLineRelation(Graphics.Geometric.Rays2D)">
            <summary>
            与射线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.CheckLineRelation(Graphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.GetIntersectPoint(Graphics.Geometric.Line2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.GetIntersectPoint(Graphics.Geometric.Rays2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.GetIntersectPoint(Graphics.Geometric.LineSegment2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo2DElement.GetMirrorPoint(Graphics.Math.Float2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:Graphics.Geometric.Line2D">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Line2D.startPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Line2D.normalizedDir">
            <summary>
            方向为单位向量
            </summary>
        </member>
        <member name="M:Graphics.Geometric.Line2D.CheckIn(Graphics.Math.Float2)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line2D.CalcDistance(Graphics.Math.Float2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line2D.ProjectPoint(Graphics.Math.Float2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line2D.AixsVector(Graphics.Math.Float2)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line2D.CheckLineRelation(Graphics.Geometric.Line2D)">
            <summary>
            与直线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line2D.CheckLineRelation(Graphics.Geometric.Rays2D)">
            <summary>
            直线与射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line2D.CheckLineRelation(Graphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line2D.GetIntersectPoint(Graphics.Geometric.Line2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line2D.GetIntersectPoint(Graphics.Geometric.Rays2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line2D.GetIntersectPoint(Graphics.Geometric.LineSegment2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line2D.GetMirrorPoint(Graphics.Math.Float2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:Graphics.Geometric.LineSegment2D">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:Graphics.Geometric.LineSegment2D.startPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:Graphics.Geometric.LineSegment2D.endPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:Graphics.Geometric.LineSegment2D.normalizedDir">
            <summary>
            方向为单位向量
            </summary>
        </member>
        <member name="P:Graphics.Geometric.LineSegment2D.length">
            <summary>
            长度
            </summary>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.#ctor(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            构建线段
            </summary>
            <param name="startPt"></param>
            <param name="endPt"></param>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.CheckIn(Graphics.Math.Float2)">
            <summary>
            判断点是否在线段上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.CalcDistance(Graphics.Math.Float2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.ProjectPoint(Graphics.Math.Float2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.AixsVector(Graphics.Math.Float2)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.CheckLineRelation(Graphics.Geometric.Line2D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.CheckLineRelation(Graphics.Geometric.Rays2D)">
            <summary>
            射线与射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.CheckLineRelation(Graphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.GetIntersectPoint(Graphics.Geometric.Line2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.GetIntersectPoint(Graphics.Geometric.Rays2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.GetIntersectPoint(Graphics.Geometric.LineSegment2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment2D.GetMirrorPoint(Graphics.Math.Float2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:Graphics.Geometric.ORect2D">
            <summary>
            (Oriented rect)，带方向的
            </summary>
        </member>
        <member name="M:Graphics.Geometric.ORect2D.Draw">
            <summary>
            draw
            </summary>
        </member>
        <member name="T:Graphics.Geometric.Rays2D">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Rays2D.startPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Rays2D.normalizedDir">
            <summary>
            方向为单位向量
            </summary>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.CheckIn(Graphics.Math.Float2)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.CalcDistance(Graphics.Math.Float2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.ProjectPoint(Graphics.Math.Float2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.AixsVector(Graphics.Math.Float2)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.CheckLineRelation(Graphics.Geometric.Line2D)">
            <summary>
            与射线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.CheckLineRelation(Graphics.Geometric.Rays2D)">
            <summary>
            射线与射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.CheckLineRelation(Graphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.GetIntersectPoint(Graphics.Geometric.Line2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.GetIntersectPoint(Graphics.Geometric.Rays2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.GetIntersectPoint(Graphics.Geometric.LineSegment2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays2D.GetMirrorPoint(Graphics.Math.Float2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:Graphics.Geometric.Rect2D">
            <summary>
            矩形区域
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Rect2D.leftBottom">
            <summary>
            左下
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Rect2D.rightUp">
            <summary>
            右上
            </summary>
        </member>
        <member name="P:Graphics.Geometric.Rect2D.LeftUp">
            <summary>
            左⬆️
            </summary>
        </member>
        <member name="P:Graphics.Geometric.Rect2D.RightBottom">
            <summary>
            右⬇️
            </summary>
        </member>
        <member name="P:Graphics.Geometric.Rect2D.LeftEdgeNormal">
            <summary>
            左边法线
            </summary>
        </member>
        <member name="P:Graphics.Geometric.Rect2D.RightEdgeNormal">
            <summary>
            右边法线
            </summary>
        </member>
        <member name="P:Graphics.Geometric.Rect2D.BottomEdgeNormal">
            <summary>
            下边法线
            </summary>
        </member>
        <member name="P:Graphics.Geometric.Rect2D.UpEdgeNormal">
            <summary>
            上边法线
            </summary>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.CheckIn(Graphics.Math.Float2)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.CalcDistance(Graphics.Math.Float2)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.GetAligentStyle(Graphics.Math.Float2)">
            <summary>
            点与矩形的关系
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.ProjectPoint(Graphics.Math.Float2)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.AixsVector(Graphics.Math.Float2)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.CheckLineRelation(Graphics.Geometric.Line2D)">
            <summary>
            与直线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.CheckLineRelation(Graphics.Geometric.Rays2D)">
            <summary>
            直线与射线间的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.CheckLineRelation(Graphics.Geometric.LineSegment2D)">
            <summary>
            与线段的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.GetIntersectPoint(Graphics.Geometric.Line2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.GetIntersectPoint(Graphics.Geometric.Rays2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.GetIntersectPoint(Graphics.Geometric.LineSegment2D,Graphics.Math.Float2@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect2D.GetMirrorPoint(Graphics.Math.Float2)">
            <summary>
            镜面但
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo3DElement.CheckIn(Graphics.Math.Float3)">
            <summary>
            判断点是否在几何元素上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo3DElement.CalcDistance(Graphics.Math.Float3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo3DElement.ProjectPoint(Graphics.Math.Float3)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo3DElement.AixsVector(Graphics.Math.Float3)">
            <summary>
            点到几何元素轴向量（垂直），交点-》pt
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo3DElement.CheckLineRelation(Graphics.Geometric.Line3D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.iGeo3DElement.GetIntersectPoint(Graphics.Geometric.Line3D,Graphics.Math.Float3@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="T:Graphics.Geometric.Line3D">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Line3D._startPoint">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Line3D._normalizedDir">
            <summary>
            方向为单位向量
            </summary>
        </member>
        <member name="M:Graphics.Geometric.Line3D.CheckIn(Graphics.Math.Float3)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line3D.CalcDistance(Graphics.Math.Float3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line3D.ProjectPoint(Graphics.Math.Float3)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line3D.AixsVector(Graphics.Math.Float3)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line3D.CheckLineRelation(Graphics.Geometric.Line3D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line3D.GetIntersectPoint(Graphics.Geometric.Line3D,Graphics.Math.Float3@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line3D.CheckInSamePlane(Graphics.Geometric.Line3D,Graphics.Geometric.Line3D)">
            <summary>
            判断是否在相同的平面
            </summary>
            <param name="line1"></param>
            <param name="line2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Line3D.GetVerticalAxis(Graphics.Geometric.Line3D,Graphics.Geometric.Line3D)">
            <summary>
            获取垂直轴
            </summary>
            <param name="line1"></param>
            <param name="line2"></param>
            <returns></returns>
        </member>
        <member name="T:Graphics.Geometric.LineSegment3D">
            <summary>
            线段
            </summary>
        </member>
        <member name="M:Graphics.Geometric.LineSegment3D.CheckIn(Graphics.Math.Float3)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment3D.CalcDistance(Graphics.Math.Float3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment3D.CheckLineRelation(Graphics.Geometric.Line3D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.LineSegment3D.GetIntersectPoint(Graphics.Geometric.Line3D,Graphics.Math.Float3@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="F:Graphics.Geometric.Plane._pt">
            <summary>
            直线上得点
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Plane._normalizedNormal">
            <summary>
            法线
            </summary>
        </member>
        <member name="M:Graphics.Geometric.Plane.CheckIn(Graphics.Math.Float3)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Plane.CalcDistance(Graphics.Math.Float3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Plane.ProjectPoint(Graphics.Math.Float3)">
            <summary>
            点导几何元素的投影点
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Plane.AixsVector(Graphics.Math.Float3)">
            <summary>
            求轴向量
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Plane.CheckLineRelation(Graphics.Geometric.Line3D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Plane.GetIntersectPoint(Graphics.Geometric.Line3D,Graphics.Math.Float3@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Polygon3D.CheckIn(Graphics.Math.Float3)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Polygon3D.CalcDistance(Graphics.Math.Float3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Polygon3D.ProjectPoint(Graphics.Math.Float3)">
            <summary>
            点导几何元素的投影
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="T:Graphics.Geometric.Rays3D">
            <summary>
            射线
            </summary>
        </member>
        <member name="M:Graphics.Geometric.Rays3D.CheckIn(Graphics.Math.Float3)">
            <summary>
            判断点是否在射线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays3D.CalcDistance(Graphics.Math.Float3)">
            <summary>
            点导视线的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays3D.CheckLineRelation(Graphics.Geometric.Line3D)">
            <summary>
            与线的关系
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rays3D.GetIntersectPoint(Graphics.Geometric.Line3D,Graphics.Math.Float3@)">
            <summary>
            获取交点
            </summary>
            <param name="line"></param>
            <param name="intersectPoint"></param>
            <returns></returns>
        </member>
        <member name="F:Graphics.Geometric.Rect3D._aixs1">
            <summary>
            轴1，带长度
            </summary>
        </member>
        <member name="F:Graphics.Geometric.Rect3D._aixs2">
            <summary>
            轴2，带长度
            </summary>
        </member>
        <member name="M:Graphics.Geometric.Rect3D.CheckIn(Graphics.Math.Float3)">
            <summary>
            判断点是否在矩形内
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Rect3D.CalcDistance(Graphics.Math.Float3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Triangle3D.CheckIn(Graphics.Math.Float3)">
            <summary>
            判断点是否在直线上
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Triangle3D.CalcDistance(Graphics.Math.Float3)">
            <summary>
            点导几何元素的距离
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Geometric.Triangle3D.ProjectPoint(Graphics.Math.Float3)">
            <summary>
            点导几何元素的投影
            </summary>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Set(System.Single,System.Single)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:Graphics.Math.Float2.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Graphics.Math.Float2.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:Graphics.Math.Float2.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="P:Graphics.Math.Float2.normalized">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float2.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float2.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float2.down">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float2.up">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float2.left">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float2.right">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float2.negativeInfinity">
            <summary>
            负无穷大
            </summary>
        </member>
        <member name="P:Graphics.Math.Float2.positiveInfinity">
            <summary>
            无穷大
            </summary>
        </member>
        <member name="M:Graphics.Math.Float2.op_UnaryNegation(Graphics.Math.Float2)">
            <summary>
            负号重载
            </summary>
            <param name="v1"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.op_Multiply(System.Single,Graphics.Math.Float2)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.op_Multiply(Graphics.Math.Float2,System.Single)">
            <summary>
             * 运算
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.op_Division(Graphics.Math.Float2,System.Single)">
            <summary>
            /运算
            </summary>
            <param name="v"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Angle(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            夹角[0, PI]
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.CosAngle(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            求cos Angle
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.SinAngle(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            求cos Angle
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Area(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            向量组成的平行四边形的面积， 已经取绝对值。
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.CheckInLine(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            共线判断，考虑误差
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.CheckVertical(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            垂直判断，考虑误差
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.ClampMagnitude(Graphics.Math.Float2,System.Single)">
            <summary>
            保持向量方向，调整向量长度
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Dot(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            点积
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Cross(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            叉积 , 可通过float3 的cross 推出，结果实际上就是z分量的值，因为，x，y分量都为0
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Distance(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            求距离
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Lerp(Graphics.Math.Float2,Graphics.Math.Float2,System.Single)">
            <summary>
            限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t">[0,1]</param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.LerpUnclamped(Graphics.Math.Float2,Graphics.Math.Float2,System.Single)">
            <summary>
            非限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Max(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            获取max向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Min(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            获取Min向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.MoveTowards(Graphics.Math.Float2,Graphics.Math.Float2,System.Single)">
            <summary>
            朝目标向量移动maxDistanceDelta距离,未考虑移出。
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="maxDistanceDelta"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Project(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            vector 在 onNormal的投影
            </summary>
            <param name="vector"></param>
            <param name="onNormal"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Perpendicular(Graphics.Math.Float2)">
            <summary>
            返回逆时针旋转90度的向量
            </summary>
            <param name="inDirection"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Reflect(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            求发射光线
            </summary>
            <param name="inDirection">入射光线</param>
            <param name="inNormal">法线</param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Scale(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            分量分别相乘，得到新的向量
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.Rotate(Graphics.Math.Float2,System.Double)">
            <summary>
            向量旋转
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float2.SignedAngle(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            求角度
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="axis">from, to 的垂直轴</param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Set(System.Single,System.Single,System.Single)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="P:Graphics.Math.Float3.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Graphics.Math.Float3.sqrMagnitude">
            <summary>
            模的平方
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.magnitude">
            <summary>
            模
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.normalized">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.zero">
            <summary>
            0 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.back">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.down">
            <summary>
            back 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.foward">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.left">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.right">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.up">
            <summary>
            foward 向量
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.negativeInfinity">
            <summary>
            负无穷大
            </summary>
        </member>
        <member name="P:Graphics.Math.Float3.positiveInfinity">
            <summary>
            无穷大
            </summary>
        </member>
        <member name="M:Graphics.Math.Float3.op_Inequality(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.op_Equality(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.op_Addition(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            + 运算
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.op_Subtraction(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            - 运算
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.op_Multiply(System.Single,Graphics.Math.Float3)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.op_Multiply(Graphics.Math.Float3,System.Single)">
            <summary>
            ×运算
            </summary>
            <param name="v"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.op_Division(Graphics.Math.Float3,System.Single)">
            <summary>
            ×运算
            </summary>
            <param name="v"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Equals(System.Object)">
            <summary>
            相等
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.GetHashCode">
            <summary>
            hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Angle(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            夹角[0, PI]
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.ClampMagnitude(Graphics.Math.Float3,System.Single)">
            <summary>
            保持向量方向，调整向量长度
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Cross(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            叉积 Cross Product of two vectors
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Dot(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            点积
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Distance(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            求距离
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Lerp(Graphics.Math.Float3,Graphics.Math.Float3,System.Single)">
            <summary>
            限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t">[0,1]</param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.LerpUnclamped(Graphics.Math.Float3,Graphics.Math.Float3,System.Single)">
            <summary>
            非限制性在点start，end 之间插值Linearly interpolates between two points.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Max(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            获取max向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Min(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            获取Min向量，计算包围盒有用
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.MoveTowards(Graphics.Math.Float3,Graphics.Math.Float3,System.Single)">
            <summary>
            朝目标向量移动maxDistanceDelta距离,未考虑移出。
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="maxDistanceDelta"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Project(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            vector 在 onNormal的投影
            </summary>
            <param name="vector"></param>
            <param name="onNormal"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.ProjectOnPlane(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            求向量vector 在平面上的投影
            </summary>
            <param name="vector"></param>
            <param name="planeNormal">平面法向量</param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Reflect(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            求发射光线
            </summary>
            <param name="inDirection">入射光线</param>
            <param name="inNormal">法线</param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Scale(Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            分量分别相乘，得到新的向量
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.SignedAngle(Graphics.Math.Float3,Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            求角度
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="axis">from, to 的垂直轴</param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.RotateTowards(Graphics.Math.Float3,Graphics.Math.Float3,System.Single,System.Single)">
            <summary>
            绕目标轴旋转
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="maxRadiansDelta"></param>
            <param name="maxMagnitudeDelta"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.Slerp(Graphics.Math.Float3,Graphics.Math.Float3,System.Single)">
            <summary>
            Spherically interpolates between two vectors 向量球面插值
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.SlerpUnclamped(Graphics.Math.Float3,Graphics.Math.Float3,System.Single)">
            <summary>
            Spherically interpolates between two vectors. 向量球面插值，非限制
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float3.SmoothDamp(Graphics.Math.Float3,Graphics.Math.Float3,Graphics.Math.Float3@,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="current"></param>
            <param name="target"></param>
            <param name="currentVelocity"></param>
            <param name="smoothTime"></param>
            <param name="maxSpeed"></param>
            <param name="deltaTime"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
        </member>
        <member name="M:Graphics.Math.Float4.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="w"></param>
        </member>
        <member name="M:Graphics.Math.Float4.Set(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="P:Graphics.Math.Float4.Item(System.Int32)">
            <summary>
            按索引访问
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="F:Graphics.Math.Float4.s_zero">
            <summary>
            0
            </summary>
        </member>
        <member name="P:Graphics.Math.Float4.one">
            <summary>
            单位向量
            </summary>
        </member>
        <member name="M:Graphics.Math.Float4.op_Inequality(Graphics.Math.Float4,Graphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float4.op_Equality(Graphics.Math.Float4,Graphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float4.op_Addition(Graphics.Math.Float4,Graphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float4.op_Subtraction(Graphics.Math.Float4,Graphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="vector1"></param>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float4.op_Multiply(System.Single,Graphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float4.op_Multiply(Graphics.Math.Float4,System.Single)">
            <summary>
            
            </summary>
            <param name="vector"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Float4.Dot(Graphics.Math.Float4,Graphics.Math.Float4)">
            <summary>
            点积
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="F:Graphics.Math.MathUtil.kEpsilon">
            <summary>
            误差
            </summary>
        </member>
        <member name="F:Graphics.Math.MathUtil.kEpsilonNormalSqrt">
            <summary>
            误差
            </summary>
        </member>
        <member name="F:Graphics.Math.MathUtil.kPI">
            <summary>
            pi 常量
            </summary>
        </member>
        <member name="T:Graphics.Math.LineRelation">
            <summary>
            线关系
            </summary>
        </member>
        <member name="F:Graphics.Math.LineRelation.None">
            <summary>
            异常情况
            </summary>
        </member>
        <member name="F:Graphics.Math.LineRelation.Coincide">
            <summary>
            重合
            </summary>
        </member>
        <member name="F:Graphics.Math.LineRelation.Parallel">
            <summary>
            平行
            </summary>
        </member>
        <member name="F:Graphics.Math.LineRelation.Intersect">
            <summary>
            相交
            </summary>
        </member>
        <member name="F:Graphics.Math.LineRelation.Detach">
            <summary>
            分离
            </summary>
        </member>
        <member name="T:Graphics.Math.AligentStyle">
            <summary>
            对其方式
            </summary>
        </member>
        <member name="F:Graphics.Math.AligentStyle.LeftBottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Graphics.Math.AligentStyle.LeftMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Graphics.Math.AligentStyle.LeftUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:Graphics.Math.AligentStyle.MiddleBottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Graphics.Math.AligentStyle.MiddleMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Graphics.Math.AligentStyle.MiddleUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:Graphics.Math.AligentStyle.RightBottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Graphics.Math.AligentStyle.RightMiddle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Graphics.Math.AligentStyle.RightUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:Graphics.Math.Matrix2x2.col1">
            <summary>
            第一行
            </summary>
        </member>
        <member name="F:Graphics.Math.Matrix2x2.col2">
            <summary>
            第二行
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix2x2.row1">
            <summary>
            第一列
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix2x2.row2">
            <summary>
            第二列
            </summary>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.#ctor(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            
            </summary>
            <param name="col1"></param>
            <param name="col2"></param>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.Set(Graphics.Math.Float2,Graphics.Math.Float2)">
            <summary>
            设置属性
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:Graphics.Math.Matrix2x2.zero">
            <summary>
            0 矩阵
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix2x2.one">
            <summary>
            单位矩阵
            </summary>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.RotateMatrix(System.Double)">
            <summary>
            
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.ScaleMatrix(System.Single,System.Single)">
            <summary>
            缩放矩阵
            </summary>
            <param name="scaleX"></param>
            <param name="scaleY"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.ScaleMatrix(System.Single)">
            <summary>
            缩放矩阵
            </summary>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.op_Inequality(Graphics.Math.Matrix2x2,Graphics.Math.Matrix2x2)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.op_Equality(Graphics.Math.Matrix2x2,Graphics.Math.Matrix2x2)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.op_Addition(Graphics.Math.Matrix2x2,Graphics.Math.Matrix2x2)">
            <summary>
            矩阵+
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.op_Subtraction(Graphics.Math.Matrix2x2,Graphics.Math.Matrix2x2)">
            <summary>
            矩阵-
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.op_Multiply(System.Single,Graphics.Math.Matrix2x2)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.op_Multiply(Graphics.Math.Matrix2x2,System.Single)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.op_Multiply(Graphics.Math.Matrix2x2,Graphics.Math.Matrix2x2)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.op_Multiply(Graphics.Math.Matrix2x2,Graphics.Math.Float2)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.op_Multiply(Graphics.Math.Float2,Graphics.Math.Matrix2x2)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.Equals(System.Object)">
            <summary>
            * 运算
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.GetT">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix2x2.T(Graphics.Math.Matrix2x2)">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="F:Graphics.Math.Matrix3x3.col1">
            <summary>
            第一行
            </summary>
        </member>
        <member name="F:Graphics.Math.Matrix3x3.col2">
            <summary>
            第二行
            </summary>
        </member>
        <member name="F:Graphics.Math.Matrix3x3.col3">
            <summary>
            第三行
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix3x3.row1">
            <summary>
            第一列
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix3x3.row2">
            <summary>
            第二列
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix3x3.row3">
            <summary>
            第二列
            </summary>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.#ctor(Graphics.Math.Float3,Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            
            </summary>
            <param name="col1"></param>
            <param name="col2"></param>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.Set(Graphics.Math.Float3,Graphics.Math.Float3,Graphics.Math.Float3)">
            <summary>
            
            </summary>
            <param name="col1"></param>
            <param name="col2"></param>
            <param name="col3"></param>
        </member>
        <member name="P:Graphics.Math.Matrix3x3.zero">
            <summary>
            0 矩阵
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix3x3.one">
            <summary>
            单位矩阵
            </summary>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.RotateZMatrix(System.Double)">
            <summary>
            绕Z旋转
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.RotateXMatrix(System.Double)">
            <summary>
            绕X旋转
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.RotateYMatrix(System.Double)">
            <summary>
            绕Y旋转
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.ScaleMatrix(System.Single,System.Single,System.Single)">
            <summary>
            缩放矩阵
            </summary>
            <param name="scaleX"></param>
            <param name="scaleY"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.ScaleMatrix(System.Single)">
            <summary>
            缩放矩阵
            </summary>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.op_Inequality(Graphics.Math.Matrix3x3,Graphics.Math.Matrix3x3)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.op_Equality(Graphics.Math.Matrix3x3,Graphics.Math.Matrix3x3)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.op_Addition(Graphics.Math.Matrix3x3,Graphics.Math.Matrix3x3)">
            <summary>
            矩阵+
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.op_Subtraction(Graphics.Math.Matrix3x3,Graphics.Math.Matrix3x3)">
            <summary>
            矩阵-
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.op_Multiply(System.Single,Graphics.Math.Matrix3x3)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.op_Multiply(Graphics.Math.Matrix3x3,System.Single)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.op_Multiply(Graphics.Math.Matrix3x3,Graphics.Math.Matrix3x3)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.op_Multiply(Graphics.Math.Matrix3x3,Graphics.Math.Float3)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.op_Multiply(Graphics.Math.Float3,Graphics.Math.Matrix3x3)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.Equals(System.Object)">
            <summary>
            * 运算
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.GetT">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix3x3.T(Graphics.Math.Matrix3x3)">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="F:Graphics.Math.Matrix4x4.col1">
            <summary>
            第一行
            </summary>
        </member>
        <member name="F:Graphics.Math.Matrix4x4.col2">
            <summary>
            第二行
            </summary>
        </member>
        <member name="F:Graphics.Math.Matrix4x4.col3">
            <summary>
            第三行
            </summary>
        </member>
        <member name="F:Graphics.Math.Matrix4x4.col4">
            <summary>
            第四行
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix4x4.row1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix4x4.row2">
            <summary>
            第二列
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix4x4.row3">
            <summary>
            第二列
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix4x4.row4">
            <summary>
            第二列
            </summary>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.#ctor(Graphics.Math.Float4,Graphics.Math.Float4,Graphics.Math.Float4,Graphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="col1"></param>
            <param name="col2"></param>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.Set(Graphics.Math.Float4,Graphics.Math.Float4,Graphics.Math.Float4,Graphics.Math.Float4)">
            <summary>
            
            </summary>
            <param name="col1"></param>
            <param name="col2"></param>
            <param name="col3"></param>
        </member>
        <member name="P:Graphics.Math.Matrix4x4.zero">
            <summary>
            0 矩阵
            </summary>
        </member>
        <member name="P:Graphics.Math.Matrix4x4.one">
            <summary>
            单位矩阵
            </summary>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.op_Inequality(Graphics.Math.Matrix4x4,Graphics.Math.Matrix4x4)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.op_Equality(Graphics.Math.Matrix4x4,Graphics.Math.Matrix4x4)">
            <summary>
            矩阵判断相等
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.op_Addition(Graphics.Math.Matrix4x4,Graphics.Math.Matrix4x4)">
            <summary>
            矩阵+
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.op_Subtraction(Graphics.Math.Matrix4x4,Graphics.Math.Matrix4x4)">
            <summary>
            矩阵-
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.op_Multiply(System.Single,Graphics.Math.Matrix4x4)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.op_Multiply(Graphics.Math.Matrix4x4,System.Single)">
            <summary>
            * 运算
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.op_Multiply(Graphics.Math.Matrix4x4,Graphics.Math.Matrix4x4)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.op_Multiply(Graphics.Math.Matrix4x4,Graphics.Math.Float4)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.op_Multiply(Graphics.Math.Float4,Graphics.Math.Matrix4x4)">
            <summary>
            * 运算
            </summary>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.Equals(System.Object)">
            <summary>
            * 运算
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.GetT">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:Graphics.Math.Matrix4x4.T(Graphics.Math.Matrix4x4)">
            <summary>
            转置矩阵
            </summary>
            <param name="k"></param>
            <param name="vector"></param>
            <returns></returns>
        </member>
    </members>
</doc>
